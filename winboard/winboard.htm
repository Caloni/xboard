<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>+ $ # KWinBoard: Chessboard for Windows</TITLE>
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<B><SUP><FONT FACE="Arial" SIZE=2><P>+$#K</SUP></FONT><I><FONT FACE="Arial" SIZE=5>WinBoard</I>: Chessboard for Windows</P>
</B></FONT><FONT SIZE=2>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> An updated description with the release of version 4.3.14</P>
<SUP><P>K#</SUP> &#9;&#9;&#9;&quot;For the ultimate WinBoard Experience&quot;</P>
</B></FONT><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>New features since WinBoard 4.2.7 that are implemented in Allessandro Scotti’s WinBoard_x are highlighted in red. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">New features in the WinBoard 4.3.xx series by H.G. Muller are highlighted in green.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Description</P>
</B><I><P>WinBoard</I> is a graphical user interface for chess. It displays a chessboard on the screen, accepts moves made with the mouse, and loads and saves game files in standard chess notation. WinBoard serves as a front-end for many different services, including:</P>

<UL>
<B><I><LI>Chess engines</B></I> that run on your PC. You can play a game against an engine, set up arbitrary positions, force variations, or watch a game between two engines. <I>GNU Chess</I> is supplied with WinBoard, and over 100 other free chess engines are available separately. Of these, Crafty is the most popular. See <U>Installing Chess Engines</U>InstallingChessEngines for instructions on installing additional chess engines.</LI>
<B><I><LI>Chess servers</I> </B>on the Internet. You can play against other Internet Chess Server (ICS) users, observe games they are playing, review games in the ICS libraries, chat, and more. WinBoard can also be used to run an automated computer player on the ICS, but this feature is for advanced users only and is subject to some caveats; see the separate file zippy.README for information.</LI>
<B><I><LI>The Web</B></I> and your own saved games. You can use WinBoard as a helper application to view files in your Web browser or the Explorer. You can use it to keep track of email postal games, browse games off the net, or review games you have saved.</LI></UL>

<B><SUP><P>K#</SUP>Getting Started</P>
</B><P>WinBoard starts up in one of three major modes: chess engine mode, ICS client mode, or game viewer mode. You cannot change modes while WinBoard is running, but you can access all the game viewer features directly from the other two modes. Also, you can start WinBoard several times to get multiple chessboard windows running in any combination of modes.</P>
</FONT><FONT SIZE=2><P>You will usually run WinBoard by choosing an item from the Windows Start menu that runs it in the mode you want. If you just double-click on WinBoard.exe, you get a startup dialog asking which mode you want. If you choose chess engine mode, you can then select from the installed engines; if you choose ICS client mode, you can then select from a list of known chess servers. More advanced users can <U>customize</U>icsNames these lists or type in WinBoard <U>command line options</U>Options directly.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>After starting WinBoard, you can make <SUP>K#</SUP>moves in several different ways. To move by dragging, press the left mouse button while the cursor is on one of your pieces, move the cursor to another square, and release the button. You can also move by clicking the left mouse button once (press and release) over one of your pieces, moving the cursor to another square, and clicking again. You drop new pieces on the board (when applicable) by selecting from a context menu. Press the right mouse button over a square to bring up the menu; no menu will come up in modes where dropping a new piece is not permitted. You can also make moves by typing them in standard algebraic chess notation. Either a dialog box will pop up for you to type into, or in ICS mode, your typing will be redirected into the ICS interaction window.</P>
<P>When WinBoard<I> </I>is iconized, its <SUP>K#</SUP>icon is a white knight if it is White's turn to move, a black knight if it is Black's turn.</P>
<B><P>Additional Information</P><DIR>

</B><U><P>MenusMenus</P>
<P>Shortcut ButtonsButtons</P>
<P>Command Line Options</U>Options</P>
<U><P>Initialization FilesFiles</P>
<P>Installing Chess EnginesInstallingChessEngines</P>
<P>Firewalls</U>Firewalls</P>
<U><P>Limitations</U>Limitations</P>
<U><P>Authors</U>Authors</P>
<U><P>Copyright</U>Copyright</P>
<U><P>Frequently Asked Questions</U>!ExecFile(FAQ.html)</P>
<B><P>&nbsp;</P></DIR>

<SUP><P>K#$+</SUP>MENUS</P><DIR>

</B><U><P>File Menu</U>FileMenu</P>
<U><P>Mode Menu</U>ModeMenu</P>
<U><P>Action Menu</U>ActionMenu</P>
<U><P>Step Menu</U>StepMenu</P>
<U><P>Options Menu</U>OptionsMenu</P>
<U><P>Help Menu</U>HelpMenu</P>
<U><P>ICS Interaction Context Menu</U>ICSInteractionContextMenu</P>
<B><P>&nbsp;</P></DIR>

<SUP><P>K#$+</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><FONT FACE="Arial" SIZE=2>File Menu</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> New Game</P>
</B></FONT><FONT FACE="Arial" SIZE=2><P>Resets WinBoard and the chess engine (if any) to the beginning of a new chess game. In Internet Chess Server mode, clears the current state of WinBoard, then resynchronizes with ICS by sending a <B>refresh </B>command. If you want to stop playing, observing, or examining a game on ICS, use an appropriate command from the <U>Action</U>ActionMenu menu, not Reset.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> New Shuffle Game</P>
</B></FONT><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>Brings you to a dialog box where you can enter the number of an opening setup for shuffle variants like FRC, or ask for a random number. After pressing OK, a new game is set up, using this position. The chosen position will continue to be used on every subsequent &quot;New Game&quot;, </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">even if you are playing a variant that normally is not shuffled, until you select a new variant through the &quot;New Variant…&quot; menu.</FONT><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"> If you enter &quot;-1&quot; for the position number,  new random number is drawn before every game.</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>The type of shuffling that is done in reaction to a given position number obeys restrictions that depend on the selected variant. In variants that allow castling, Kings remain on the central files, Rooks in the corners. In games with FRC-style castlings, the King starts between the Rooks, but apart from that they could be anywhere. In games without castling, there are no restrictions on King and Rook placement. Pairs of color-bound pieces (such as Bishops) will be placed on oppositely colored squares. In ICS mode this feature has no effect, as the ICS determines the starting position.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> New Variant</P>
</B><P>Select a new variant. There are controls to enter a board width, board height and holdings size, but normally you leave them at ‘-1’, which means the default value for the selected variant will be used (e.g. 8x8 for normal Chess, 9x10 for xiangqi, 10x8 for capablanca, holdings for 5 pieces in crazyhouse). You can set a deviating value for each of the three parameters (e.g. to play a crazyhouse version of xiangqi or capablanca you would set the holdings to 6 or 7). If the board width deviates from the default, the game will start with an empty board. </P>
<P>The variant will remain in force until you select a new one; i.e. subsequent &quot;New Game&quot; commands will start a new game of the same variant. In ICS mode this command has no effect, as the ICS determines which variant will be played.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Load Game</P>
</B><P>Plays a game from a record file. A popup dialog prompts you for the filename. If the file contains more than one game, a second popup dialog displays a list of games (with information drawn from their PGN tags, if any), and you can select the one you want.</P>
<P>The game file parser will accept PGN (portable game notation), or in fact almost any file that contains moves in algebraic notation. Notation of the form <I>P@f7</I> is accepted for piece-drops in bughouse games; this is a nonstandard extension to PGN. If the file includes a PGN position (FEN tag), or a WinBoard position diagram bracketed by "[--" and "--]" before the first move, the game starts from that position. Text enclosed in parentheses, square brackets, or curly braces is assumed to be commentary and is displayed in a pop-up window. Any other text in the file is ignored. PGN variations (enclosed in parentheses) are treated as comments; WinBoard is not able to walk variation trees. The nonstandard PGN tag </FONT><FONT FACE="Courier New" SIZE=2>[Variant "varname"]</FONT><FONT FACE="Arial" SIZE=2> functions similarly to the <U>variant</U>variant command-line option, allowing games in certain chess variants to be loaded. There is also a heuristic to recognize chess variants from the </FONT><FONT FACE="Courier New" SIZE=2>Event</FONT><FONT FACE="Arial" SIZE=2> tag, by looking for the strings that the Internet Chess Servers put there when saving variant ("wild") games.</P>
<B><SUP><P>K#</SUP> Load Next Game</P>
</B><P>Loads the next game from the last game record file you loaded.</P>
<B><SUP><P>K#</SUP> Load Previous Game</P>
</B><P>Loads the previous game from the last game record file you loaded. Not available if the last game was loaded from a pipe.</P>
<B><SUP><P>K#</SUP> Reload Same Game</P>
</B><P>Reloads the last game you loaded. Not available if the last game was loaded from a pipe.</P>
<B><SUP><P>K#</SUP> Save Game</P>
</B><P>Appends a record of the current game to a file. A popup dialog prompts you for the filename. If the game did not begin with the standard starting position, the game file includes the starting position used. Game files are saved in the PGN (portable game notation) format, unless the <U>oldSaveStyle</U>oldSaveStyle option is True, in which case they are saved in an older format that is specific to WinBoard<I>.</I> Both formats are human-readable, and both can be read back by the Load Game command. Notation of the form <I>P@f7</I> is generated for piece-drops in bughouse games; this is a nonstandard extension to PGN.</P>
<B><SUP><P>K#</SUP> Copy Game To Clipboard</P>
</B></FONT><FONT SIZE=2><P>Copies the record of the current game to the Windows clipboard in PGN (portable game notation) format.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Paste Game From Clipboard</P>
</B></FONT><FONT SIZE=2><P>Plays a game from the Windows clipboard.</FONT><FONT FACE="Arial" SIZE=2> See <U>Load Game</U>LoadGame for a discussion of game file format and parser behavior.</P>
<B><SUP><P>K#</SUP> Load Position</P>
</B><P>Sets up a position from a position file. A popup dialog prompts you for the filename. Position files must be in FEN (Forsythe-Edwards notation), or in the format that the <U>Save Position</U> command writes when <U>oldSaveStyle</U>oldSaveStyle is turned on. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">Note that many variants require an extension of the original FEN standard. WinBoard tries to be as universal as possible in understanding FENs when different standards are raound, but has to make a choice when writing them. In FRC is uses Shredder-FEN (Haha castling notation) , but it understands KQkq as the outermost Rook, so it also reads X-FEN. In Crazyhouse / Bughouse it appends the holdings immediately behind the board info between brackets [], but on input it also understands bFEN (which puts it behind a slash / as if it were an extra board rank). It uses a tilde ~ behind a piece to indicate it is really a promoted Pawn (like bFEN). In Shogi the holdings are printed like in Crazyhouse, but promoted pieces are represented by a plus sign + before the letter of the original piece. Letters used for the pieces can be set with the /pieceToCharTable command-line option.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Load Next Position</P>
</B><P>Loads the next position from the last position file you loaded.</P>
<B><SUP><P>K#</SUP> Load Previous Position</P>
</B><P>Loads the previous position from the last position file you loaded. Not available if the last position was loaded from a pipe.</P>
<B><SUP><P>K#</SUP> Reload Same Position</P>
</B><P>Reloads the last position you loaded. Not available if the last position was loaded from a pipe.</P>
<B><SUP><P>K#</SUP> Save Position</P>
</B><P>Appends a diagram of the current position to a file. A popup dialog prompts you for the filename. Positions are saved in FEN (Forsythe-Edwards notation) format, unless the <U>oldSaveStyle</U>oldSaveStyle option is True, in which case they are saved in an older, human-readable format that is specific to WinBoard<I>.</I> Both formats can be read back by the Load Position command; however, currently Load Position can load only the first position in a file.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> Save Diagram</P>
</B><P>Writes the current board display as a bitmap file. With this command you can use WinBoard as a diagram generator.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Copy Position To Clipboard</P>
</B><P>Places a diagram of the current position (in Forsythe-Edwards notation) into the Windows clipboard.</P>
<B><SUP><P>K#</SUP> Paste Position From Clipboard</P>
</B><P>Sets up a position from the Windows clipboard. Position must be in FEN (Forsythe-Edwards notation). Puts WinBoard into <U>Edit Game</U>EditGame mode if it was not there already.</P>
<B><SUP><P>K#</SUP> Exit</P>
</B><P>Exits from WinBoard.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</SUP> Mode Menu</P>
<SUP><P>K#</SUP> Machine White</P>
</B><P>Forces the chess engine to play white.</P>
<B><SUP><P>K#</SUP> Machine Black</P>
</B><P>Forces the chess engine to play black.</P>
<B><SUP><P>K#</SUP> Two Machines</P>
</B><P>Starts a game between two chess engines.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> Machines Both</P>
</B><P>A single chess engine plays itself. Mainly useful for pseudo-engines, that are in fact communication links to another machine, where you want to observe a game that is being played. (E.g. the gothic-chess.com server). This command is not implemented yet (version 4.3.14).</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Analysis Mode</P>
</B><P>In this mode, you can make moves for both sides on the board. After each move, the chess engine will think about possible replies and display its analysis in a separate window. This feature currently works only if Crafty is the chess engine.</P>
<B><SUP><P>K#</SUP> Analyze File</P>
</B><P>In this mode, you can load a game from a file, and the chess engine will analyze each move as in Analysis Mode. This feature currently works only if Crafty is the chess engine.</P>
<B><SUP><P>K#</SUP> ICS Client</P>
</B><P>This is the normal mode when WinBoard is connected to a chess server. If you have moved into Edit Game or Edit Position mode, you can select this option to get out.</P>
<P>When you run WinBoard in ICS mode, it starts up a console window in which you can type commands and receive text responses from the chess server. You can use the standard Windows editing keys to edit your command line before pressing Enter. The console window keeps a history of the last few commands you typed. Press the up-arrow key to go back to a previous command; press the down-arrow key to go forward again to a later command. Press the right mouse button in the output area for a <U>context menu</U>ICSInteractionContextMenu of editing commands and ICS command shortcuts.</P>
<P>Some useful ICS commands include <B>who</B> to see who is logged on, <B>games</B> to see what games are being played, <B>match</B> to challenge another player to a game, <B>observe</B> to observe an ongoing game, <B>examine</B> or <B>smoves</B> to review a recently completed game, and of course <B>help</B>. </P>
<P>Whenever you ask to observe an ongoing game, review a completed game, or resume an adjourned game, WinBoard retrieves and parses the list of past moves from the ICS, so you can review them with <U>Forward</U>Forward and <U>Backward</U>Backward or save them with <U>Save Game</U>SaveGame.</P>
<P>Some special ICS Client features are activated when you are in <B>examine</B> or <B>bsetup </B>mode on ICS. See the descriptions of the menu commands <U>Forward</U>Forward, <U>Backward</U>Backward, <U>Pause</U>Pause, and <U>Stop Examining</U>StopExamining below. You can also issue the ICS position-editing commands with the mouse. Move pieces by dragging with the left mouse button, or by left-clicking once on the starting square and once on the ending square. Press the right mouse button over a square for a context menu that lets you drop a new piece, empty the square, or clear the board. Click on the White or Black clock to set the side to play. You cannot set the side to play or drag pieces to arbitrary squares while examining on ICC, but you can do so in bsetup mode on FICS. You can also make moves by typing them into the ICS window; you may have to do this occasionally if you are playing a chess variant whose rules WinBoard does not understand, such as Fischer Random.</P>
<P>If you are playing a bughouse game on the ICS, a list of the offboard pieces that each player holds is shown in the window title bar. To drop an offboard piece, press the right mouse button over an empty square to bring up a context menu. To observe your partner's games, start a second copy of WinBoard, log in as a guest, and use the ICS <B>follow</B> or <B>pfollow</B> command in the new window.</P>
<B><SUP><P>K#</SUP> Edit Game</P>
</B><P>Allows you to make moves for both Black and White, and to change moves after backing up with the <U>Backward</U>Backward command. The clocks do not run, but you can adjust their reading by clicking on them. A left-click subtracts one minute, a right-click adds one minute.</P>
<P>In chess engine mode, the chess engine continues to check moves for legality but does not participate in the game. You can bring the chess engine back into the game by selecting <U>Machine White</U>MachineWhite, <U>Machine Black</U>MachineBlack, or <U>Two Machines</U>TwoMachines.</P>
<P>In ICS mode, the moves are not sent to the ICS: Edit Game takes WinBoard out of ICS Client mode and lets you edit games locally. If you want to edit a game on ICS in a way that other ICS users can see, use the ICS <B>examine</B> command or start an ICS match against yourself.</P>
<B><SUP><P>K#</SUP> Edit Position</P>
</B><P>Lets you set up an arbitrary board position. Use the left mouse button to drag pieces to new squares, or to delete a piece by dragging it off the board or dragging an empty square on top of it. To drop a new piece on a square, press the right mouse button over the square. This brings up a menu of pieces. Additional menu choices let you empty the square or clear the board. You can set the side to play next by clicking on the White or Black indicator at the top of the screen. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">The pop-up menu also contains options to ‘promote’ or ‘demote’ the piece currently in the square. (In variants like Crazyhouse a piece has a different representation when it is a promoted Pawn rater than an original piece.) This allows you to create some of the not-so-common pieces (e.g. a Unicorn is a promoted King, a Commoner is a demoted King).</P>
</FONT><FONT FACE="Arial" SIZE=2><P>Selecting Edit Position causes WinBoard<I> </I>to discard all remembered moves in the current game.</P>
<P>In ICS mode, change made to the position by Edit Position are not sent to the ICS: Edit Position takes WinBoard out of ICS Client mode and lets you edit positions locally. If you want to edit positions on ICS in a way that other ICS users can see, use the ICS <B>examine</B> command, or start an ICS match against yourself. (See also <U>ICS Client</U>ICSClient above.)</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Show Engine Output</P>
</B></FONT><FONT SIZE=2 COLOR="#ff0000"><P>Open a new window dedicated to showing the thinking output of the engine(s), as controlled by &quot;Show Thinking&quot;.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Show Evaluation Graph</P>
</B></FONT><FONT SIZE=2 COLOR="#ff0000"><P>Open a new window dedicated to displaying a graph, representing the development of the engine score(s) from the current game over time. (Needs &quot;show Thinking&quot; to be enabled in order to work.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Show Game List</P>
</B></FONT><FONT SIZE=2><P>Open a new window dedicated to showing the list of all games in the currently loaded game file.The information that is displayed for each game can be controlled in the options menu. (e.g. players, date, result, taken from the PGN tags.)</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Show Move History</P>
</B></FONT><FONT SIZE=2 COLOR="#ff0000"><P>Open a new window dedicated to showing the game currently in progress.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Training</P>
</B></FONT><FONT SIZE=2><P>Training mode lets you interactively guess the moves of a game for one of the players. While in Training mode, the navigation buttons are disabled. You guess the next move of the game by playing the move on the board (or using the <U>Type In MoveTypeInMove</U> command). If the move played matches the next move of the game, the move is accepted and the opponent’s response is autoplayed.  If the move played is incorrect, an error message is displayed. </P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Show Game List</P>
</B><P>Shows or hides the list of games generated by the last <U>Load Game</U>LoadGame command.</P>
<B><SUP><P>K#</SUP> Edit Tags</P>
</B><P>Lets you edit the PGN (portable game notation) tags for the current game. After editing, the tags must still conform to the PGN tag syntax:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P><BR>
&lt;tag-section&gt; ::= &lt;tag-pair&gt; &lt;tag-section&gt;<BR>
                  &lt;empty&gt;<BR>
&lt;tag-pair&gt;    ::= [ &lt;tag-name&gt; &lt;tag-value&gt; ]<BR>
&lt;tag-name&gt;    ::= &lt;identifier&gt;<BR>
&lt;tag-value&gt;   ::= &lt;string&gt;</P></DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>See the PGN Standard for full details. Here is an example:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P><BR>
[Event "Portoroz Interzonal"]<BR>
[Site "Portoroz, Yugoslavia"]<BR>
[Date "1958.08.16"]<BR>
[Round "8"]<BR>
[White "Robert J. Fischer"]<BR>
[Black "Bent Larsen"]<BR>
[Result "1-0"]</P></DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>Any characters that do not match this syntax are silently ignored. Note that the PGN standard requires all games to have at least the seven tags shown above. Any that you omit will be filled in by WinBoard with </FONT><FONT FACE="Courier New" SIZE=2>"?"</FONT><FONT FACE="Arial" SIZE=2> (unknown value) or </FONT><FONT FACE="Courier New" SIZE=2>"-"</FONT><FONT FACE="Arial" SIZE=2> (inapplicable value).</P>
<B><SUP><P>K#</SUP> Edit Comment</P>
</B><P>Adds or modifies a comment on the current position. Comments are saved by <U>Save Game</U>SaveGame and are displayed by <U>Load Game</U>LoadGame, <U>Forward</U>Forward, and <U>Backward</U>Backward.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> Enter Username</P>
</B></FONT><FONT SIZE=2 COLOR="#008000"><P>Allows you to type the name of the human player, which will appear in the PGN header and in the window title.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Pause</P>
</B><P>Pauses updates to the board, and if you are playing against a local chess engine, also pauses your clock. To continue, select Pause again, and the display will automatically update to the latest position. The <B>P</B> (or <B>C</B>) button is equivalent to selecting Pause.</P>
<P>If you select Pause when you are playing<A NAME="WHATSelSavT"></A> <A NAME="fWHATtopic">against</A> a chess engine and it is not your move, the chess engine’s clock will continue to run and it will eventually make a move, at which point both clocks will stop. Since board updates are paused, however, you will not see the move until you exit from Pause mode (or select <U>Forward</U>Forward). This behavior is meant to simulate adjournment with a sealed move.</P>
<P>If you select Pause while you are in <B>examine</B> mode on ICS, you can step backward and forward in the current history of the examined game without affecting the other examiners or observers. Select Pause again to reconnect yourself to the current state of the game on ICS.</P>
<P>If you select Pause while you are loading a game, the game stops loading. You can load more moves one at a time by selecting <U>Forward</U>Forward, or resume automatic loading by selecting Pause again.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</SUP> Action Menu</P>
</B><P>Most of these commands are available in chess server mode only.</P>
<B><SUP><P>K#</SUP> Accept</P>
</B><P>Accepts a pending match offer. If there is more than one offer pending, you will have to type in a more specific command instead of using this menu choice.</P>
<B><SUP><P>K#</SUP> Decline</P>
</B><P>Declines a pending offer (match, draw, etc.). If there is more than one offer pending, you will have to type in a more specific command instead of using this menu choice.</P>
<B><SUP><P>K#</SUP> Rematch</P>
</B><P>Issues the ICS <B>rematch</B> command, which asks for another game against your last opponent with the same time control and rule set.</P>
<B><SUP><P>K#</SUP> Call Flag</P>
</B><P>Calls your opponent's flag, claiming a win on time, or claiming a draw if you are both out of time. You can also call your opponent's flag by clicking on his clock.</P>
<B><SUP><P>K#</SUP> Draw</P>
</B><P>Offers a draw to your opponent, accepts a pending draw offer from your opponent, or claims a draw by repetition or the 50-move rule, as appropriate.</P>
<B><SUP><P>K#</SUP> Adjourn</P>
</B><P>Asks your opponent to agree to adjourning the current game, or agrees to a pending adjournment offer from your opponent. You continue an adjourned ICS game by challenging the same player again with the ICS <B>match</B> command.</P>
<B><SUP><P>K#</SUP> Abort</P>
</B><P>Asks your opponent to agree to abort the current game, or agrees to a pending abort offer from your opponent. An aborted ICS game ends immediately without affecting either player's rating.</P>
<B><SUP><P>K#</SUP> Resign</P>
</B><P>Resigns the game to your opponent.</P>
<B><SUP><P>K#</SUP> Stop Observing</P>
</B><P>Ends your participation in observing a game, by issuing the ICS <B>unobserve</B> command.</P>
<B><SUP><P>K#</SUP> Stop Examining</P>
</B><P>Ends your participation in observing a game, by issuing the ICS <B>unobserve</B> command.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Adjudicate To White</P>
</B><P>End the current game and stop participating engine. The result will appear in the PGN as a win for white.</P>
<B><SUP><P>K#</SUP> Adjudicate To Black</P>
</B><P>Same as above, but game will appear as a win for black.</P>
<B><SUP><P>K#</SUP> Adjudicate Draw</P>
</B><P>Same as above, but game will appear as a draw.</P>
<B><P>&nbsp;</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2><P>K#$+</SUP> Step Menu</P>
<SUP><P>K#</SUP> Type In Move</P>
</B><P>Pops up a dialog box, into which you can type moves in standard algebraic chess notation. (You can also get this dialog box by simply starting to type over the chessboard, except in ICS mode, where such typing is redirected into the ICS interaction window.)</P>
<B><SUP><P>K#</SUP> Backward</P>
</B><P>Steps backward through a series of remembered moves. The <B>&lt;</B> button is equivalent to selecting Backward.In most modes, Backward only lets you look back at old positions; it does not retract moves. This is the case if you are playing against a chess engine, playing or observing a game on the ICS, or loading a game. If you select Backward in any of these situations, you will not be allowed to make a different move. Use <U>Retract Move</U>RetractMove or <U>Edit Game</U>EditGame if you want to change past moves.</P>
<P>If you are examining a game on the ICS, the behavior of Backward depends on whether WinBoard<I> </I>is in <U>Pause</U>Pause mode. If Pause mode is off, Backward issues the ICS command<B> backward</B>, which backs up everyone's view of the game and allows you to make a different move. If Pause mode is on, Backward only backs up your local view.</P>
<B><SUP><P>K#</SUP> Forward</P>
</B><P>Steps forward through a series of remembered moves (undoing the effect of <U>BackwardBackward</U>) or through a game file. The <B>&gt;</B> button is equivalent.</P>
<P>If you are examining a game on the ICS, the behavior of Forward depends on whether WinBoard<I> </I>is in <U>Pause</U>Pause mode. If Pause mode is off, Forward issues the ICS command<B> forward</B>, which moves everyone's view of the game forward along the current line. If Pause mode is on, Forward only moves your local view forward, and it will not go past the position the game was in when you paused.</P>
<B><SUP><P>K#</SUP> Back to Start</P>
</B><P>Jumps backward to the first remembered position in the game. The <B>&lt;&lt; </B>button is equivalent.</P>
<P>In most modes, Back to Start only lets you look back at old positions; it does not retract moves. This is the case if you are playing against a chess engine, playing or observing a game on the ICS, or loading a game. If you select Back to Start in any of these situations, you will not be allowed to make a different move. Use <U>Retract Move</U>RetractMove or <U>Edit Game</U>EditGame if you want to change past moves; or use <U>Reset</U>Reset to start a new game.</P>
<P>If you are examining a game on the ICS, the behavior of Back to Start depends on whether WinBoard<I> </I>is in <U>Pause</U>Pause mode. If Pause mode is off, Backward issues the ICS command <B>backward 999999</B>, which backs up everyone's view of the game to the start and allows you to make different moves. If Pause mode is on, Back to Start only backs up your local view.</P>
<B><SUP><P>K#</SUP> Forward to End</P>
</B><P>Jumps forward to the last position in the game. The <B>&gt;&gt;</B> button is equivalent.</P>
<P>If you are examining a game on the ICS, the behavior of Forward to End depends on whether WinBoard<I> </I>is in <U>Pause</U>Pause mode. If Pause mode is off, Forward to End issues the ICS command <B>forward 999999</B>, which moves everyone's view of the game forward to the end of the current line. If Pause mode is on, Forward to End only moves your local view forward, and it will not go past the position the game was in when you paused.</P>
<B><SUP><P>K#</SUP> Revert</P>
</B><P>If you are examining a game on the ICS, issues the ICS command <B>revert</B>.</P>
<B><SUP><P>K#</SUP> Truncate Game</P>
</B><P>Discards all remembered moves of the game beyond the current position. Puts WinBoard into <U>Edit Game</U>EditGame mode if it was not there already.</P>
<B><SUP><P>K#</SUP> Move Now</P>
</B><P>Forces the chess engine to move immediately. May not work with all chess engines.</P>
<B><SUP><P>K#</SUP> Retract Move</P>
</B><P>Retracts your last move.</P>
<P>In chess engine mode, you can do this only after the chess engine has replied to your move. If the chess engine is still thinking, use <U>Move Now</U>MoveNow first.</P>
<P>In ICS mode, Retract Move issues the command <B>takeback 1 </B>or <B>takeback 2</B>, depending on whether it is your opponent's move or yours.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</SUP> Options Menu</P>
<SUP><P>K#</SUP> <U>Flip View</P>
</B></U><P>Inverts your view of the chessboard.</P>
<P>If you are playing a game on the ICS, the board is always oriented at the start of the game so that your pawns move from the bottom of the window towards the top. Otherwise, the starting position is determined by the <U>flipView</U>flipViewOption command line option.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> <U>Swap Clocks</P>
</B></U><P>Interchanges the position of the white and black clocks on the screen. Intended for manually-operated computer-computer games, where the monitor is standing to the side of the playing board, to make sure that the operator sees the time of his own machine on his side of the table. Note that it is possible to adjust the clocks in steps of one minute, by left- (decrement) or right-clicking (increment) it with the mouse in &quot;Edit Game&quot; mode. (Clicking the clocks in other modes is interpreted as claiming the flag.)</P>
</FONT><B><U><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP>General</P>
</U><SUP><P>K#</SUP> Always On Top</P>
</B><P>If this option is on, WinBoard sets its chessboard to be a <I>topmost</I> window, meaning that it always appears on top of all ordinary windows on the screen.</P>
<B><SUP><P>K#</SUP> Always Queen</P>
</B><P>If Always Queen is off, WinBoard brings up a dialog box whenever you move a pawn to the last rank, asking what piece you want to promote it to. If the option is on, your pawns are always promoted to queens. Your opponent can still underpromote, however.</P>
<B><SUP><P>K#</SUP> Animate Dragging</P>
</B><P>If Animate Dragging is on while you are dragging a piece with the mouse, an image of the piece follows the mouse cursor. If Animate Dragging is off, there is no visual feedback while you are</P>
<P>dragging a piece, but if Animate Moving is on, the move will be animated when it is complete.</P>
<B><SUP><P>K#</SUP> Animate Moving</P>
</B><P>If Animate Moving is on, all piece moves are animated.  An image of the piece is shown moving from the old square to the new square when the move is completed (unless the move was already animated by Animate Dragging). If Animate Moving is off, a moved piece instantly disappears from its old square and reappears on its new square when the move is complete.</P>
<B><SUP><P>K#</SUP> Auto Flag</P>
</B><P>If this option is on and one player runs out of time before the other, WinBoard will automatically call his flag, claiming a win on time. In ICS mode, Auto Flag will only call your opponent's flag, not yours, and the ICS may award you a draw instead of a win if you have insufficient mating material. On most chess servers, you can now do<B> set autoflag 1 </B>instead and have the server call the flag. In local chess engine mode, WinBoard may call either player's flag and will not take material into account.</P>
</FONT><B><SUP><FONT SIZE=2><P>K#</SUP> Auto Flip View</P>
</B><P>If this option is on when you</FONT><FONT FACE="Arial" SIZE=2> start a game, the board will be automatically oriented so that your pawns move from the bottom of the window towards the top.</P>
</FONT><B><SUP><FONT SIZE=2><P>K#</SUP> Auto Raise Board</P>
</B><P>If thisautoFlipViewOption option is on, whenever a new game begins, the chessboard window will be deiconized (if necessary) and raised to the top of the stack of windows on your screen.</P>
<B><SUP><P>K#</SUP>Blindfold</P>
</B><P>If Blindfold is on, WinBoard displays a blank board. Moves can still be entered with the mouse, either by dragging the (invisible) piece or clicking the starting and ending square. You can also enter your move by typing it on the keyboard</FONT><FONT FACE="Arial" SIZE=2>.</P>
<B><SUP><P>K#</SUP> Highlight Dragging</P>
</B><P>If Highlight Dragging is on while you are dragging a piece with the mouse, the starting square and the square that the mouse cursor is over are highlighted. This option works even if Animate Dragging is off.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Extended PGN Info</P>
</B><P>The PGN will contain the engine search depth, score and time for each move where the depth is non-zero, as a comment behind the move if this option is on. Works only when &quot;Show Thinking&quot; is enabled. The recorded time is the time reported by the engine.</P>
<B><SUP><P>K#</SUP> Extra Info in Move History</P>
</B><P>Same as above, but in move-history window. </P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Highlight Last Move</P>
</B><P>If Highlight Last Move is on, after a move is made, the starting and ending squares remain highlighted. In addition, after you use <U>Backward</U>Backward or <U>Back to Start</U>BackToStart, the starting and ending squares of the last move to be <I>unmade</I> are highlighted.</P>
<B><SUP><P>K#</SUP> Periodic Updates</P>
</B><P>If Periodic Updates is on, the Analysis window is updated every two seconds. If not, it is updated only when the best move found changes. The Analysis window currently works only with Crafty, and Periodic Updates may not work with all versions of Crafty.</P>
<B><SUP><P>K#</SUP> Ponder Next Move</P>
</B><P>If this option is off, the chess engine will think only when it is on move. If the option is on, the engine will also think while waiting for you to make your move.</P>
<B><SUP><P>K#</SUP> Popup Exit Message</P>
</B><P>If this option is on, when WinBoard wants to display a message just before exiting, it brings up a modal dialog box and waits for you to click OK before exiting. If the option is off, WinBoard prints exits immediately without showing the message. If <U>debugMode</U>debugMode is on, however, the message will appear in the debug log.</P>
<B><SUP><P>K#</SUP> Popup Move Errors</P>
</B><P>If this option is off, when you make an error in moving (such as attempting an illegal move or moving the wrong color piece), the error message is displayed in the message area. If the option is on, move errors are displayed in small popup windows like other errors. You can dismiss an error popup either by clicking its OK button or by clicking anywhere on the board, including downclicking to start a move.</P>
<B><SUP><P>K#</SUP> Show Button Bar</P>
</B><P>If Show Button Bar is on, WinBoard displays on-screen <U>buttons</U>BUTTONS to step forward, backward, or pause the game. If it is off, the buttons are hidden, making the message line wider.</P>
<B><SUP><P>K#</SUP> Show Coords</P>
</B><P>If Show Coords is on, WinBoard displays algebraic coordinates along the board's left and bottom edges. </P>
<B><SUP><P>K#</SUP> Show Thinking</P>
</B><P>If this option is set, WinBoard displays the chess engine’s current search depth and its notion of the score and best line of play from the current position as it is thinking. The score indicates how many pawns ahead (or if negative, behind) the engine thinks it is. In matches between two machines, the score is prefixed by W or B to indicate whether it is showing White's thinking or Black's.</P>
<B><SUP><P>K#</SUP> Test Legality</P>
</B><P>If Test Legality is on, WinBoard tests whether the moves you enter with the mouse or read from game files are legal, and displays an error if they are not. Turn this option off if you are playing a chess variant that WinBoard does not understand. (Bughouse, suicide, and wild variants where the king may castle after starting on the <B>d</B> file are generally supported with Test Legality on. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">The same holds for variants with non-FIDE pieces, like shatranj, xangqi, shogi, gothic, capablanca, courier, knightmate: WinBoard knows how all pieces occurring in those variants move. Falcon, cylinder and berolina are only partly supported, though, and the latter two should definitely be played with legality testing off, and falcon uses a wildcard piece for the Falcons, so it considers any move of them legal, but might miss checkmates that involve a Falcon. So you should not play it with claim verification switched on.</FONT><FONT FACE="Arial" SIZE=2>)</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> Hide Thinking from Human</P>
</B><P>An alternative to suppressing the Thinking Output in the display above the board by switching &quot;Show Thinking&quot; off, but doing it in a way that still allows the extended PGN info to be recorded.</P>
<B><SUP><P>K#</SUP> Highlight Move with Arrow</P>
</B><P>A big, fat arrow is drawn between the start and target field of the last move, so you cannot possibly miss it. </P>
</FONT><B><U><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP>Board</P>
</U><SUP><P>K#</SUP> Board Size</P>
</B><P>Determines how large the board will be and what fonts and piece bitmaps will be used. On a Titanic board the piece bitmaps are 129x129 pixels, on Colossal 116x116, Giant 108x108, Huge 95x95, Big 87x87, Large 80x80, Bulky 72x72, Medium 64x64, Moderate 58x58, Average 54x54, Middling 49x49, Mediocre 45x45, Small 40x40, Slim 37x37, Petite 33x33, Dinky 29x29, Teeny 25x25, and Tiny 21x21. The smaller boards have no system menu, but you can minimize or close them from the File menu.</P>
<P>You can also change the board size by dragging the window edges or corners with the mouse. The board will snap to the largest size that fits into the area you outline.</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>Note that only sizes Bulky, Middling and to a lesser extent Petite have built-in bitmaps for the non-FIDE- pieces. Archbishop, Chancellor and the wildcard Lance exist in all sizes from Petite to Bulky, though. In size Moderate, variant shogi uses the traditional Japanese piece representation.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Board Colors</P>
</B><P>Lets you change the colors WinBoard is using to draw the board and pieces.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> All White</P>
</B><P>Uses the representation of the white pieces (a filled-in black outline) also for the black pieces (where you can fill them with another color to distinguish them). If you do not choose a very dark color for the black pieces, they look very ugly without outline, and using this option can fix that.</P>
<B><SUP><P>K#</SUP> Flip Black</P>
</B><P>Displays the black pieces upside down (or the white pieces in &quot;Flip View&quot;). This is useful in Shogi, when you want to use the traditional Japanese representation of the pieces.</P>
</FONT><B><U><FONT SIZE=2><P>&nbsp;</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP>Engine</P>
</U><SUP><P>K#</SUP> Ponder Next Move,Show Thinking, Hide Thinking from Human and Periodic Updates</P>
</B><P>Duplicates of the controls in the &quot;General&quot; option menu.</P>
<B><SUP><P>K#</SUP> Adjudicate Draw Moves</P>
</B><P>Adjudicate a draw after the given number of moves, to prevent games from dragging on forever if two engines in a dead-drawn position, conspire to avoid 50-move draws. This and the folowing options are only active in &quot;Two Machines&quot; mode.</P>
<B><SUP><P>K#</SUP> Adjudicate Loss Threshold</P>
</B><P>Adjudicate the game as a loss when both engines agree that the (negative) score is  below the given threshold for the duration of 6 consecutive plies.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> Verify Claims</P>
</B><P>Verify result claims made by engines when they terminate the game. If needed, correct the results to a loss for the engine making the false claim. Needs &quot;Test Legality&quot; to be on in order to work.</P>
<B><SUP><P>K#</SUP> Detect Mates</P>
</B><P>Let WinBoard detect checkmate and stalemate, even before the engine gets the chance to claim it. Useful with buggy engines, that exit without a claim, or just hang. Needs &quot;Test Legality&quot; to be on in order to work.</P>
<B><SUP><P>K#</SUP> Draw if Insufficient Material</P>
</B><P>If this option is on, WinBoard will recognize KBKB positions with equally colored Bishops, KBK, KNK, and KK positions as draws, even before the engine can claim them. Needs &quot;Test Legality&quot; to be on in order to work.</P>
<B><SUP><P>K#</SUP> Adjudicate Trivial Draws</P>
</B><P>If this option is on, KBKB (with B on unlike color), KBKN, KNKN, KNNK, KRKR and KQKQ positions will be adjudicated draw after 6 ply. For KQKQ this is not really sound, and in the future it might be taken out of this option. But as long as tablebase adjudications are not implemented, it seems best to group this end-game with the trivial draws. Needs &quot;Test Legality&quot; to be on in order to work.</P>
<B><SUP><P>K#</SUP> N-Move Rule</P>
</B><P>Here you can set the number of reversible moves (non-pawn, non-capture) after which WinBoard should adjudicate a game as draw. Engine draw claims are always consider ed valid after 50 moves (in the context of &quot;Verify Claims&quot;), but you can set a different value here to either give the engine more leeway if it wants to play on, or test its claiming capabilities, or set it to a smaller value if you are impatient.</P>
<B><SUP><P>K#</SUP> N-fold Repetition Rule</P>
</B><P>Here you can set the number of repetitions of the same position that should occur in order for WinBoard to adjudicate the game as draw. Engine draw claims are always consider ed valid after 3 repetitions (in the context of &quot;Verify Claims&quot;) , but you can set a different value here to either give the engine more leeway if it wants to play on, or test its claiming capabilities, or set it to 2 if you are impatient. (Do not set it to 1!)</P>
</FONT><B><U><FONT SIZE=2><P>&nbsp;</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP>UCI</P>
</U><SUP><P>K#</SUP> Polyglot Directory</P>
</B><P>If WinBoard knows where to find Polyglot, you can install UCI engines as if they were WinBoard engines, and WinBoard will automatically invoke Polyglot as an adapter to run them.</P>
<B><SUP><P>K#</SUP> Hash Size, EGTB Path, EGTB Cache Size, Opening Book</P>
</B><P>These are options that UCI engines expect to be specified. If future extensions of WinBoard protocol allow native WinBoard engines to request similar information, it might be used for these engines as well.</P>
</FONT><B><U><FONT SIZE=2><P>&nbsp;</P>
<SUP><P>K#</SUP>ICS</P>
</U></FONT><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> Auto Comment</P>
</B><P>If Auto Comment is on, any remarks made on ICS while you are observing or playing a game are recorded as a comment on the current move. This includes remarks made with the ICS commands <B>say, tell, whisper, </B>and <B>kibitz</B>. Limitation: remarks that you type yourself are not </P>
<P>recognized; WinBoard scans only the output from ICS, not the input you type to it.</P>
<B><SUP><P>K#</SUP> Auto Observe</P>
</B><P>If Auto Observe is on and you add a player to your <B>gnotify</B> list on ICS, WinBoard will automatically observe all of that player's games, unless you are doing something else (such as observing or playing a game of your own) when one starts. On most chess servers, you can now do <B>follow <I>player</B></I> instead, and the server will automatically observe all of <B><I>player’s</B></I> games.</P>
<B><SUP><P>K#</SUP> Get Move List</P>
</B><P>If Get Move List is on, whenever WinBoard<I> </I>receives the first board of a new ICS game (or a different ICS game from the one it is currently displaying), it retrieves the list of past moves from the server. You can then review the moves with the Forward and Backward commands or save them with Save Game. You might want to turn off this option if you are observing several blitz games at once, to keep from wasting time and network bandwidth fetching the move lists over and over. If you turn this option on while a game is in progress, WinBoard<I> </I>immediately fetches the current move list.</P>
<B><SUP><P>K#</SUP> Local Line Editing</P>
</B><P>If Local Line Editing is <B>on</B>, your machine handles echoing, backspacing, etc., for the characters that you type into the ICS Interaction window. Output is forwarded to the ICS only when you hit Enter.The Enter key produces a newline character, also known as Ctrl+J, \n, LF, linefeed, or decimal ASCII code 10. In this mode you can force a control character into the edit buffer by preceding it with Ctrl+Q (&quot;quote&quot;); however, the edit buffer will not accept certain control characters even when they are quoted in this way. You can force a control character to be sent immediately to ICS, bypassing the edit buffer, by preceding it with Ctrl+S (&quot;send&quot;).</P>
<P>WinBoard keeps a history of lines you recently typed in Local Line Editing mode. You can bring back old lines by pressing the cursor up key in the text entry box. Press the cursor down key to go back down to newer lines.</P>
<P>If Local Line Editing is <B>off</B>, all characters are sent to ICS as you type them. The Enter key produces a carriage return character, also known as Ctrl+M, \r, CR, or decimal ASCII code 13. Use Ctrl+Backspace if you need the ASCII DEL character. You can enter any character code by holding down the Alt key and typing its decimal value (always beginning with 0) on the numeric keypad; this is a little-known standard feature of Windows.</P>
<P>In both modes, if WinBoard<I>’s </I>internal telnet protocol implementation is active, it translates all \n characters to the standard telnet end-of-line sequence \r\n just before sending them out to ICS; see <U>telnetProgram</U>telnetProgram.</P>
<P>It is generally not a good idea to turn off this option while connected to ICS. If you are tempted to do so because everything you type is being echoed an extra time, see the paragraph about extra echoes under <U>LIMITATIONS</U>LIMITATIONS below.</P>
<B><SUP><P>K#</SUP> Quiet Play</P>
</B><P>If Quiet Play is on, WinBoard will automatically issue an ICS <B>set shout 0</B> command whenever you start a game and a <B>set shout 1</B> command whenever you finish one. Thus you will not be distracted by shouts from other ICS users while playing.</P>
<B><SUP><P>K#</SUP> Premove</P>
</B></FONT><FONT SIZE=2><P>Premove allows you to play a move on the board before you have received your opponent’s move.  This move is highlighted on the board using the <U>Premove HighlightpremoveHighlightColor</U> color, and is sent to the ICS as soon as your opponent’s move is received. To cancel a premove, either click twice on the piece that was premoved or premove an illegal move.</P>
<P>This group of controls allows you to set the following options: <U>premove</U>premove, <U>premoveWhite</U>premoveWhite, <U>premoveWhiteText</U>premoveWhiteText, <U>premoveBlack</U>premoveBlack, <U>premoveBlackText</U>premoveBlackText.</P>
<B><SUP><P>K#</SUP>ICS Alarm</P>
</B><P>When <B>icsAlarm</B> is set to True, the <U>alarm sound</U>soundIcsAlarm is played when your clock counts down to <U>icsAlarmTime</U>icsAlarmTime seconds.  For ICS games with time controls that include an increment, the alarm will sound each time the clock counts down to the <U>icsAlarmTime</U>icsAlarmTime.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> ICS Interaction Colors</P>
</B><P>Lets you change the colors and type styles that WinBoard uses to distinguish between different types of messages in the ICS Interaction window. The types distinguished are: shout, sshout, channel 1 tell, other channel tell, kibitz (or whisper), personal tell (or new message notification), challenge, request (including abort, adjourn, draw, pause, and takeback), seek, and normal (all other messages).</P>
<B><SUP><P>K#</SUP> <U>Fonts</P>
</B></U><P>Lets you change the fonts WinBoard is using.  The clock font, message font and coordinates font are specific to each board size.  The tags font, comments font and ICS Interaction font are not dependent on the current size of the board.  The &quot;Revert to Defaults&quot; button will reset the clock font, message font and coordinates font for the current board size, and will set the tags font, message font and Ics Interaction font for all board sizes.</P>
<B><SUP><P>K#</SUP> <U>Sounds</P>
</B></U><P>Lets you change the sounds that WinBoard plays for various events.</P>
<SUP><P>K#</SUP>If the Move sound is on, WinBoard alerts you by playing a sound after each of your opponent's moves (or after every move if you are observing a game on the Internet Chess Server). The sound is not played after moves you make or moves read from a saved game file. If you turn on the Move sound when using WinBoard with the Internet Chess Server, you will probably want to give the <B>set bell 0</B> command to the ICS. Otherwise the ICS will send a bell character after every move (not just yours), causing WinBoard to play the ICS Bell sound too. Alternatively, you could turn off the ICS Bell sound in WinBoard, but that might cause you to miss ICS alerts for other interesting events.</P>
<P>The other sound events correspond directly to the types of messages that the <U>ICS Interaction Colors</U>ICSInteractionColors option knows how to colorize.</P>
<B><SUP><P>K#</SUP> <U>Game List</P>
</B></U><P>Lets you select which information is displayed in the Game List window.</P>
<B><SUP><P>K#</SUP> <U>Communications</P>
</B></U><P>Lets you change the communication port parameters when the <U>internetChessServerComPort</U>internetChessServerComPort option is in use.</P>
<B><SUP><P>K#</SUP> <U>Load Game</P>
</B></U><P>Lets you change options used while loading games (<U>timeDelay</U>timeDelay option).</P>
<B><SUP><P>K#</SUP> <U>Save Game</P>
</B></U><P>Lets you change options used for saving games (<U>autoSaveGames</U>autoSaveGames, <U>oldSaveStyle</U>oldSaveStyle, and <U>saveGameFile</U>saveGameFile options).</P>
<B><SUP><P>K#</SUP> <U>Time Control</P>
</B></U><P>Lets you change the time control to be used in games against a chess engine. Two types of timing are available.</P>
<P>With conventional chess clocks, each player begins with his clock set to the <U>timeControl</U>timeControl period. When both players have made <U>movesPerSession</U>movesPerSession moves, a new time control period begins. The time in the new period is added to whatever time the players have left on their clocks.</P>
<P>With incremental clocks, each player is given an initial time allotment, and a <U>timeIncrement</U>timeIncrement is added to his clock after every move. The increment may be zero, in which case the entire game must be finished within the initial time allotment.</P>
<B><SUP><P>K#</SUP> <U>Save Settings Now</P>
</B></U><P>Save the current option settings to a file, along with the current window sizes and positions, to be automatically reloaded next time WinBoard is run. See <U>Settings</U>Settings for the fine points.</P>
<B><SUP><P>K#</SUP> <U>Save Settings on Exit</P>
</B></U><P>If this option is on, the current settings are automatically saved when WinBoard exits, as with Save Settings Now.</P>
<B><P>&nbsp;</P>
<SUP><P>K#</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><SUP><FONT FACE="Arial" SIZE=2>$+</SUP> Help Menu</P>
<SUP><P>K#</SUP> Help Contents</P>
</B><P>Brings up this help file, starting at the Contents page.</P>
<B><SUP><P>K#</SUP> Help Index</P>
</B><P>Brings up this help file, starting at the Index/Find dialog.</P>
<B><SUP><P>K#</SUP> How to Use Help</P>
</B><P>Brings up the standard help file that explains how to use Windows Help.</P>
<B><SUP><P>K#</SUP> Hint</P>
</B><P>Displays a move hint from the chess engine.</P>
<B><SUP><P>K#</SUP> Book</P>
</B><P>Displays a list of possible moves from the chess engine’s opening book. The first column gives moves, the second column gives one possible response for each move, and the third column shows the number of lines in the book that include the move from the first column. If you select this option and nothing happens, the engine is out of its book or does not support the book command.</P>
<B><SUP><P>K#</SUP> About WinBoard</P>
</B><P>Displays the WinBoard version number.</P>
<B><P>&nbsp;</P>
<SUP><P>K#</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><SUP><FONT FACE="Arial" SIZE=2>$+</SUP>ICS Interaction Context Menu</P>
</B><P>To see this menu, press the right mouse button anywhere in the output (upper) pane of the ICS Interaction window. Pressing the right mouse button in the input (lower) pane gives a standard editing context menu, not described here. Use the <B>help</B> command on ICS to learn what these commands mean.</P>
<P>You can customize the lower part of this menu (below the Paste option) by setting the <U>icsMenu</U>icsMenu option. The easiest way to accomplish this is to edit your <U>settings file</U>settings with Notepad or another plain text editor. Sorry, there is no graphical user interface for customizing the menu.</P>
<B><SUP><P>K#</SUP> Copy and Paste</P>
</B><P>Copies the current selection to the clipboard, then pastes it to the input box. As a shortcut to this function, you can press the middle mouse button (if you have one), or Shift plus the right mouse button.</P>
<B><SUP><P>K#</SUP> Copy</P>
</B><P>Copies the current selection to the clipboard.</P>
<B><SUP><P>K#</SUP> Paste</P>
</B><P>Pastes the clipboard contents to the input box.</P>
<B><SUP><P>K#</SUP> Who</P>
</B><P>Sends the command &quot;who&quot;<B><I> </B></I>to ICS.</P>
<B><SUP><P>K#</SUP> Players</P>
</B><P>Sends the command &quot;players&quot;<B><I> </B></I>to ICS.</P>
<B><SUP><P>K#</SUP> Games</P>
</B><P>Sends the command &quot;games&quot;<B><I> </B></I>to ICS.</P>
<B><SUP><P>K#</SUP> Sought</P>
</B><P>Sends the command &quot;sought&quot;<B><I> </B></I>to ICS.</P>
<B><SUP><P>K#</SUP> Tell (name)</P>
</B><P>Inserts &quot;tell <I>name </I>&quot;<B><I> </B></I>into the input box. The string <I>name </I>is the current selection if it is not empty. Otherwise <I>name </I>is the word surrounding the mouse position, where a &quot;word&quot; is a string of letters, digits, or hyphens (-), such as an ICS user handle or game number.</P>
<B><SUP><P>K#</SUP> Message (name)</P>
</B><P>Inserts &quot;message <I>name </I>&quot;<B><I> </B></I>into the input box, where <I>name</I> is as defined above.</P>
<B><SUP><P>K#</SUP> Finger (name)</P>
</B><P>Sends the command &quot;finger <I>name</I>&quot;<B><I> </B></I>to ICS, where <I>name</I> is as defined above. </P>
<B><SUP><P>K#</SUP> Vars (name)</P>
</B><P>Sends the command &quot;vars <I>name</I>&quot;<B><I> </B></I>to ICS, where <I>name</I> is as defined above. </P>
<B><SUP><P>K#</SUP> Observe (name)</P>
</B><P>Sends the command &quot;observe <I>name</I>&quot;<B><I> </B></I>to ICS, where <I>name</I> is as defined above. Here <I>name</I> can be either a user handle or a game number.</P>
<B><SUP><P>K#</SUP> Match (name)</P>
</B><P>Sends the command &quot;match <I>name</I>&quot;<B><I> </B></I>to ICS, where <I>name</I> is as defined above. </P>
<B><SUP><P>K#</SUP> Play (name)</P>
</B><P>Sends the command &quot;play <I>name</I>&quot;<B><I> </B></I>to ICS, where <I>name</I> is as defined above. Here <I>name</I> can be either a user handle or a seek ad number.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><FONT FACE="Arial" SIZE=2>BUTTONS</P>
<SUP><P>K</SUP> &lt;&lt;</P>
</B><P>Same as <U>Back to Start</U>BacktoStart.</P>
<B><SUP><P>K</SUP> &lt;</P>
</B><P>Same as <U>Backward</U>Backward.</P>
<B><SUP><P>K</SUP> P</P>
</B><P>Same as <U>Pause</U>Pause. The button label changes to <B>C</B> while WinBoard is pausing.</P>
<B><SUP><P>K</SUP> &gt;</P>
</B><P>Same as <U>Forward</U>Forward.</P>
<B><SUP><P>K</SUP> &gt;&gt;</P>
</B><P>Same as <U>Forward to End</U>ForwardtoEnd.</P>
<B><P>&nbsp;</P>
<SUP><P>KK</SUP> <SUP>#</SUP> <SUP>$</SUP> <SUP>+</SUP> COMMAND LINE OPTIONS</P>
</B><P>All WinBoard options can be set either on the command line (if you start WinBoard by typing into an MSDOS Prompt box), in the Properties/Shortcut/Target box of a Windows shortcut, in a <U>settings file</U>settings, or in the Additional Options box of the WinBoard startup dialog. Exactly the same syntax is used in all four places. Most options can also be set from the menus and saved using <U>Save Settings Now</U>SaveSettings or <U>Save Settings on Exit</U>SaveSettingsOnExit, so most people will not need to read this section.</P>
<P>Most options have two names, a long one that is easy to read and a short one that is easy to type. To turn on a boolean (true/false) option <I>opt</I>, you can just give its short name preceded by a minus sign or slash (-<I>opt</I> or /<I>opt</I>); to turn one off, prefix the short name by an &quot;x&quot; or an extra minus sign (-x<I>opt</I> or /-<I>opt</I>). To set any other kind of option, or to set a boolean option using its long name, give the value after the name, separated by a space, colon, or equal sign. (-<I>opt</I> 23 or /<I>option</I>:true). If a string option contains spaces or special characters, enclose it in double quotes and use the \ quoting convention of C to name the special characters. Alternatively, you can enclose a string value in curly braces (/opt={string}), as long as the value does not contain a closing curly brace. If a filename option contains spaces, enclose it in either single or double quotes. In filename options, the \ character is not treated specially, so use single quotes around the outside of the value if it has double quotes inside (and vice versa).</P>
<P>When you start WinBoard, it will pop up the Startup dialog box unless you provide sufficient options on the command line for WinBoard to determine which major mode to be in and what engines to use or chess server to connect to. To bypass this box, you must at minimum give one of the three options <U>/cp</U>cp, /<U>ics</U>ics, or /<U>ncp</U>ncp.  If you give the /cp option, you must also give the /<U>fcp</U>fcp and /<U>scp</U>scp options. If you give the /ics option, you must also give the /<U>icshost</U>icshost option.</P><DIR>

<U><P>Chess Engine Options</U>ChessEngineOptions</P>
<U><P>Internet Chess Server Options</U>InternetChessServerOptions</P>
<U><P>Load and Save Options</U>LoadAndSaveOptions</P>
<U><P>User Interface Options</U>UserInterfaceOptions</P>
<U><P>Other Options</U>OtherOptions</P>
<B><P>&nbsp;</P></DIR>

<SUP><P>K$#+</SUP> Chess Engine Options</P>
<SUP><P>K#</SUP>/cp</B> or<B> /xcp</B>,<B> </B>or<B> <SUP>K#</SUP>/chessProgram <I>true|false</P>
</B></I><P>If true, puts WinBoard in chess engine mode. In this mode, you can play against a chess program running on your PC or use it as an analysis partner.</P>
<B><SUP><P>K#</SUP>/tc </B>or<B> <SUP>K#</SUP>/timeControl <I>minutes[:seconds]</P>
</B></I><P>Each player begins with his clock set to the timeControl period. Default: 5 minutes. The additional options movesPerSession and timeIncrement are mutually exclusive.</P>
<B><SUP><P>K#</SUP>/mps </B>or<B> <SUP>K#</SUP>/movesPerSession <I>moves</P>
</B></I><P>When both players have made movesPerSession moves, a new timeControl period is added to both clocks. Default: 40 moves.</P>
<B><SUP><P>K#</SUP>/inc </B>or<B> <SUP>K#</SUP>/timeIncrement <I>seconds</P>
</B></I><P>If this option is specified, movesPerSession is ignored. Instead, after each player's move, timeIncrement seconds are added to his clock. Use -timeIncrement 0 if you want to require the entire game to be played in one timeControl period, with no increment. Default: -1, which specifies movesPerSession mode.</P>
<B><SUP><P>K#</SUP> /clock </B>or <B>/xclock</B>, or<B> <SUP>K#</SUP> /clockMode <I>true|false</P>
</B></I><P>Determines whether or not to display the chess clocks. If clockMode is False, the clocks are not shown, but the side that is to play next is still highlighted. Also, unless searchTime is set, the chess engine still keeps track of the clock time and uses it to determine how fast to make its moves.</P>
<B><SUP><P>K#</SUP> /st </B>or<B> <SUP>K#</SUP> /searchTime <I>minutes[:seconds]</P>
</B></I><P>Tells the chess engine to spend at most the given amount of time searching for each of its moves. Without this option, the engine chooses its search time based on the number of moves and amount of time remaining until the next time control. Setting this option also sets clockMode to False.</P>
<B><SUP><P>K#</SUP> /depth </B>or<B> <SUP>K#</SUP> /searchDepth <I>number</P>
</B></I><P>Tells the chess engine to look ahead at most the given number of moves when searching for a move to make. Without this option, the engine chooses its search depth based on the number of moves and amount of time remaining until the next time control. With the option, the engine will cut off its search early if it reaches the specified depth.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /firstNPS <I>number</P>
</I><SUP><P>K#</SUP> /secondNPS <I>number</P>
</B></I><P>Tells the chess engine to use an internal time standard based on its node count, rather then wall-clock time, to make its time decisions. The time in virtual seconds should be obtained by dividing the node count through the given <I>number</I>, like the number was a rate in nodes per second. WinBoard will manage the clocks in accordance with this, relying on the number of nodes reported by the engine in its thinking output. If <I>number</I> equals zero, it can obviously bnot be used to convert nodes to seconds, and the time reported by the engine is used to decrement the WinBoard clock. The engine is supposed to report in CPU time it uses, rather than wall-clock time in this mode. Tis option can provide fairer conditions fo engine-engine matches on heavily loaded machines, or with very fast games (where the wall clock is too inaccurate). &quot;Show Thinking&quot; must be on for this option to work. Not many engines might support this yet!</P>
<B><SUP><P>K#</SUP> /firstTimeOdds <I>factor</P>
</I><SUP><P>K#</SUP> /secondTimeOdds <I>factor</P>
</B></I><P>Reduces the time given to the mentioned engine by the given <I>factor</I>. If pondering is off, the effect is indistinguishable from what would happen if the engine was running on a <I>factor</I> times slower machine.</P>
<B><SUP><P>K#</SUP> /timeOddsMode <I>mode</P>
</B></I><P>This option determines how the case is handled when both engines have a time-odds handicap. If mode=1, the engine that gets the most time will always get the nominal time, as specified by the time-control options, and its opponent’s time is normalized similarly. If mode=0, both play with reduced time.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /ponder</B> or <B>/xponder</B>,<B> </B>or<B> <SUP>K#</SUP> /ponderNextMove <I>true|false</P>
</B></I><P>Sets the <U>Ponder Next Move</U>ponderNextMoveCmd option. Default: True.</P>
<B><SUP><P>K#</SUP> /thinking</B> or <B>/xthinking</B>,<B> </B>or<B> <SUP>K#</SUP> /showThinking <I>true|false</P>
</B></I><P>Sets the <U>Show Thinking</U>showThinkingCmd option. Default: False.</P>
<B><SUP><P>K#</SUP> /periodic </B>or <B>/xperiodic</B>, or<B> <SUP>K#</SUP> /periodicUpdates <I>true|false</P>
</B></I><P>Sets the <U>Periodic Updates</U>periodicUpdatesCmd option. Default: True.</P>
<B><SUP><P>K#</SUP> /mg </B>or<B> <SUP>K#</SUP> /matchGames <I>n</P>
</B></I><P>Automatically runs an <B><I>n</B>-</I>game match between two chess engines, with alternating colors. If the <U>loadGameFile</U>loadGameFile or <U>loadPositionFile</U>loadPositionFile option is set, WinBoard will start each game with the given opening moves or the given position; otherwise, the games will start with the standard initial chess position. If the <U>saveGameFile</U>saveGameFile option is set, a move record for the match will be appended to the specified file. If the <U>savePositionFile</U>savePositionFile option is set, the final position reached in each game of the match will be appended to the specified file. When the match is over, WinBoard will display the match score and exit. Default: 0 (do not run a match).</P>
<B><SUP><P>K#</SUP> /mm </B>or <B>/xmm</B>, or<B> <SUP>K#</SUP> /matchMode <I>true|false</P>
</B></I><P>Provided for backward compatibility. If true and matchGames=0, sets matchGames=1.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /matchPause <I>number</P>
</B></I><P>Sets the length of the pause between games in match mode to <I>number</I> msec. Default value is 10000, i.e. 10 sec. (If this pause is too short, engines not implementing ‘ping’ will sometimes send the last move of their previous game only when a new game has started, at which time the move is illegal, and causes them to forfeit the game.)</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /fd </B>or<B> <SUP>K#</SUP> /firstDirectory <I>dir<BR>
</I><SUP>K#</SUP> /sd </B>or<B> <SUP>K#</SUP> /secondDirectory <I>dir</I><SUP> </SUP><BR>
<SUP>K#</SUP> /fcp </B>or<B> <SUP>K#</SUP> /firstChessProgram <I>command<BR>
</I><SUP>K#</SUP> /scp </B>or<B> <SUP>K#</SUP> /secondChessProgram <I>command</I><SUP> </P>
</B></SUP><P>Names of the chess engines and working directories in which they are to be run. The second chess engine is started only in Two Machines (match) mode. These arguments are parsed as filenames; that is, the \ character is interpreted literally, not as a C-style escape.</P>
<P>The <I>dir</I> argument specifies the initial working directory for the chess engine. It should usually be the directory where the engine and its working files are installed. If <I>dir</I> is not an absolute pathname, it is interpreted relative to the directory from which WinBoard.exe itself was loaded. The <I>dir</I> argument is ignored if the chess engine is being run on a remote machine (see firstHost and secondHost below). The default value for <I>dir </I>"", meaning that the chess engine is expected to be installed in the same directory as WinBoard.</P>
<P>The <I>command</I> argument is actually the command line to the chess engine, so if the engine itself needs command line arguments, you can include them by enclosing <I>command</I> in single or double quotes. If the engine name or an engine argument has a space in it, use single quotes around the whole <I>command, </I>and inside them use double quotes around each item that contains spaces. If the engine name has more than one period in it (for example, </FONT><FONT FACE="Courier New" SIZE=2>QChess1.5.exe</FONT><FONT FACE="Arial" SIZE=2>), you must include the "</FONT><FONT FACE="Courier New" SIZE=2>.exe</FONT><FONT FACE="Arial" SIZE=2>" extension; otherwise you can leave it out. The default value for <I>command</I> is "", which brings up the startup dialog to ask which engines you want.</P>
<P>Examples:</P><DIR>
<DIR>
<DIR>

</FONT><FONT FACE="Courier New" SIZE=1><P>WinBoard /cp /fd="C:\Program Files\Crafty" /fcp=WCrafty-15.12.exe /scp=GNUChess</P>
<P>WinBoard /cp /fd="C:\Miracle Games" /fcp='"Miracle Chess.exe" /wow' /scp=GNUChess</P></DIR>
</DIR>
</DIR>

</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>The basic rule is thus that what is inside the quotes delimiting the argument to /fcp and /scp, all goes to the engine, and is ignored by WinBoard. WinBoard 4.3.13 and later, however, knows an exception to this: If, within the quotes, the word WBopt appears, everything that follows this word will be interpreted as a WinBoard argument, in stead of being passed to the engine on startup of the latter. (The WBopt itself is also not passed to the engine.) This possibility of hiding WinBoard arguments in the engine command is provided in order to create options that follow the engine in a tournament, when a tournament manager like PSWBTM is used to invoke WinBoard. Because, in order to apply to a given engine, some options need to know if they apply to first or second engine, which might vary during the tournament, options hidden inside the engine command-line can contain ‘%s’ which will be replaced at the time the option is used by ‘first’ or ‘second’, as applicable.</P>
<P>Examples:</P><DIR>
<DIR>
<DIR>

</FONT><FONT FACE="Courier New" SIZE=1 COLOR="#008000"><P>WinBoard /cp /fd="C:\Engines\Crafty" /fcp=&quot;WCrafty-15.12 WBopt /%sTimeOdds=2&quot; /scp=GNUChess</P></DIR>
</DIR>
</DIR>

</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>Meaning that Crafty will have to play with half the time GNUChess will get.</P>
</FONT><FONT FACE="Courier New" SIZE=1><P>&nbsp;</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /fh </B>or<B> <SUP>K#</SUP> /firstHost <I>host<BR>
</I><SUP>K#</SUP> /sh </B>or<B> <SUP>K#</SUP> /secondHost <I>host</P>
</B></I><P>Hosts on which the chess engines are to run. The default for each is "localhost". If you specify another host, WinBoard<I> </I>uses <U>rsh</U>rsh to run the chess program there. The /fd and /sd flags do not work in conjunction with these flags; if you need a remote chess engine to run somewhere other than your default login directory on the remote machine, you will have to include a "cd" command in the argument to /fcp or /scp.</P>
<B><SUP><P>K#</SUP> /firstInitString </B>or <B>/initString <I>string<BR>
</I><SUP>K#</SUP> /secondInitString <I>string</P>
</B></I><P>The strings that are sent to initialize the chess engines. Default: "new\nrandom\n". The "\n" sequences represent newlines. You can type "\n" on the command line or in a <U>settings file</U>settings, and WinBoard will convert it to a newline.</P>
<P>All chess engines require the "new" command to start a new game.</P>
<P>You can remove the "random" command if you like; including it causes GNU Chess to randomize its move selection slightly so that it doesn't play the same moves in every game. Even without "random", GNU Chess randomizes its choice of moves from its opening book. You can also try adding other commands to the initString; see the GNU Chess documentation (gnuchess.txt) for details. Crafty ignores the "random" command; see its documentation for the commands it accepts.</P>
<B><SUP><P>K#</SUP> /firstComputerString <I>string<BR>
</I><SUP>K#</SUP> /secondComputerString <I>string</P>
</B></I><P>If the chess engine is playing against another computer program (whether locally or on a chess server), by default the command "computer\n" is sent to it. Some chess engines change their playing style when they receive this command. If you do not want the engine to know when it is playing another computer, you can set the string to "".</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>Note that the computer string is sent to the engine after most other initialization commands, and is thus ideal for hiding a WinBoard-protocol command in that should be sent only to one engine, when the WinBoard option that normally specifies this command cannot be differentiated by engine, but s always sent to both engines. E.g. if you want one of the engines to ponder, and the other not. Because it is sent last, in can overrule earlier commands.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /fb </B>or <B>/xfb</B>, or<B> <SUP>K#</SUP> /firstPlaysBlack <I>true|false</P>
</B></I><P>In games between two chess programs, the firstChessProgram normally plays white. (This is a change from earlier versions of WinBoard.) If this option is True, firstChessProgram plays black. In a multi-game match, this option affects the colors only for the first game; they still alternate in subsequent games.</P>
<B><SUP><P>K#</SUP>/reuse<SUP> </B></SUP>or <B>/xreuse</B>, or <B><SUP>K#</SUP>/reuseFirst<I> true|false<BR>
</I><SUP>K#</SUP>/reuse2<SUP> </B></SUP>or <B>/xreuse2</B>, or <B><SUP>K#</SUP>/reuseSecond<I> true|false</P>
</B></I><P>If this option is True (the default), WinBoard<I> </I>uses the same chess engine process repeatedly when playing multiple games. If the option is False, WinBoard kills off the chess engine after every game and starts a fresh one for the next game. Starting a fresh chess engine can be slow, so it is not recommended. However, some chess engines may not work properly when reused, such as versions of Crafty earlier than 12.0.</P>
<B><SUP><P>K#</SUP>/firstProtocolVersion <I>ver<BR>
</I><SUP>K#</SUP>/secondProtocolVersion <I>ver</P>
</B></I><P>This option specifies which version of the chess engine communication protocol to use. By default, version-number is 2. In version 1, the "protover" command is not sent to the engine; since version 1 is a subset of version 2, nothing else changes. Other values for version-number are not supported.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP>/firstScoreAbs<I> true|false<BR>
</I><SUP>K#</SUP>/secondScoreAbs<I> true|false</P>
</B></I><P>If this option is true, the score reported by the engine is taken to be that in favor of white, even when the engine plays black. Important when winboard uses the score for adjudications, or in PGN reporting. This can be a useful option in combination with WBopt in the engine command-line, see under /fcp.</P>
<B><SUP><P>+K$#</SUP> UCI engine support</P>
<SUP><P>K#</SUP> /fUCI </B>or<B> <SUP>K#</SUP> /firstIsUCI<I> true|false</P>
</I><SUP><P>K#</SUP> /sUCI </B>or<B> <SUP>K#</SUP> /secondIsUCI<I> true|false</P>
</B></I><P>Indicates if the mentioned engine executable file is an UCI engine,</FONT><FONT SIZE=2 COLOR="#ff0000"> ICSLogon and should be run with the aid of the Polyglot adapter rather than directly. WinBoard will then pass the other UCI options and engine name to Polyglot through a .ini temporary file ceated for the purpose.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /PolyglotDir <I>filename</P>
</B></I><P>Gives the name of the folder in which Polyglot is installedICSLogon.</P>
<B><SUP><P>K#</SUP> /usePolyglotBook <I>true|false</P>
</B></I><P>Specifies if the Polygot book should be usedICSLogon.</P>
<B><SUP><P>K#</SUP> /PolyglotBook <I>filename</P>
</B></I><P>Gives the filename of the opening book that Polyglot should useICSLogon.</P>
<B><SUP><P>K#</SUP> /fNoOwnBookUCI </B>or<B> <SUP>K#</SUP> /firstHasOwnBookUCI<I> true|false</P>
</I><SUP><P>K#</SUP> /sNoOwnBookUCI </B>or<B> <SUP>K#</SUP> /secondHasOwnBookUCI<I> true|false</P>
</B></I><P>Indicates if the mentioned engine lacks an opening book or not</FONT><FONT SIZE=2 COLOR="#ff0000">.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /defaultHashSize <I>number</P>
</B></I><P>Sets the size of the hash table to <I>number</I> MegaBytesICSLogon.</P>
<B><SUP><P>K#</SUP> /defaultCacheSizeEGTB <I>number</P>
</B></I><P>Sets the size of the EGTB cache to <I>number</I> MegaBytesICSLogon.</P>
<B><SUP><P>K#</SUP> /defaultPathEGTB <I>filename</P>
</B></I><P>Gives the name of the folder where the end-game tablebases are installedICSLogon.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>+K$#</SUP> Internet Chess Server Options</P>
<SUP><P>K#</SUP> /ics </B>or <B>/xics</B>, or<B> <SUP>K#</SUP> /internetChessServerMode<I> true|false</P>
</B></I><P>Connect with an Internet Chess Server to play chess against its other users, observe games they are playing, or review games that have recently finished. See <U>ICS Client</U>ICSClient Default: False.</P>
<P>You can create a script file containing ICS commands that WinBoard will type in for you whenever you connect to the ICS. See <U>ICS Logon</U>ICSLogon.</P>
<B><SUP><P>K#</SUP> /icshost </B>or<B> <SUP>K#</SUP> /internetChessServerHost <I>hostname</P>
</B></I><P>The host name or numeric address of the Internet Chess Server to connect to when in ICS mode. The default is the empty string, which causes WinBoard to pop up a menu of known ICS sites. The file ics-addresses.txt in the WinBoard distribution gives slightly more information on these sites. It includes their numeric addresses, which you can use if your site does not have a working name server.</P>
<B><SUP><P>K#</SUP> /icsport </B>or<B> <SUP>K#</SUP> /internetChessServerPort <I>portnumber</P>
</B></I><P>The port number to use when connecting to a chess server in ICS mode. Default: 5000.</P>
<B><SUP><P>K#</SUP>/icshelper <I>program</P>
</B></I><P>An external helper program used to communicate with the chess server. Typically <SUP>K</SUP><I>timestamp</I> for the ICC (chessclub.com) or <SUP>K</SUP><I>timeseal</I> for FICS (freechess.org, eics.daimi.aau.dk, etc.). This option is shorthand for &quot;/useTelnet /telnetProgram <I>program</I>&quot;<B>.</P>
<SUP><P>K#</SUP>/telnet</B> or <B>/xtelnet</B>,<B> </B>or<B> <SUP>K#</SUP>/useTelnet<I> true|false</P>
</B></I><P>This option is poorly named; it should be called <B>/useHelper</B>. If set to True, it instructs WinBoard to use an external helper program to communicate with the ICS, as specified by the telnetProgram option. The external program must be a pure console application that can communicate with WinBoard through pipes; the Windows telnet application is not suitable. If the option is False (the default), WinBoard communicates with the ICS by opening a Winsock TCP socket and using its own internal implementation of the telnet protocol.</P>
<B><SUP><P>K#</SUP>/gateway <I>hostname</P>
</B></I><P>If this option is set to a host name, WinBoard uses <U>rsh</U>rsh to run the telnetProgram remotely on the given host to communicate with the Internet Chess Server instead of using its own internal implementation of the telnet protocol. See the <U>FIREWALLS</U>FIREWALLS section below for an explanation of when this option is useful.</P>
<B><SUP><P>K#</SUP>/telnetProgram <I>program</P>
</B></I><P>This option is poorly named; it should be called <B>/helperProgram</B>. It gives the name of the remote or external helper program to be used with the gateway or useTelnet option. The default is "telnet". The telnet program is invoked with the value of internetChessServer as the first argument and the value of internetChessServerPort as the second argument on its command line.</P>
<B><SUP><P>K#</SUP>/icscom </B>or<B> <SUP>K#</SUP>/internetChessServerComPort <I>name</P>
</B></I><P>If this option is set, WinBoard communicates with the Internet Chess Server using a serial communication port instead of a network connection. Use this option if your machine is not connected to a network (not even via SLIP or PPP), but you do have Internet access through another machine by dialing in using a modem or by connecting directly to a serial terminal port. Example:</P>
</FONT><FONT FACE="Courier New" SIZE=1><P>WinBoard /ics /icscom:com1</P>
</FONT><FONT FACE="Arial" SIZE=2><P>After you start WinBoard in this way, type whatever modem commands are necessary to dial out to your Internet provider and log in. You may need to turn off <U>Local Line Editing</U>LocalLineEditing on the Options menu while typing commands to the modem, but turn it on again afterwards. Then telnet to the ICS, using a command like "telnet chessclub.com 5000". Important: See the paragraph in the <U>LIMITATIONS</U>LIMITATIONS section below about extra echoes.</P>
<B><SUP><P>K#</SUP> /comPortSettings</B> <B><I>&quot;dataRate,dataBits,parity,stopBits,flow&quot;</P>
</B></I><P>This option allows serial port parameters to be set from the command line or a settings file. The values are simply filled in to the <U>Communications</U>Communications dialog.</P>
<B><SUP><P>K#</SUP> /icslogon </B>or<B> <SUP>K#</SUP> /internetChessServerLogonScript <I>filename</P>
</B></I><P>This option lets you change the name used for the <U>ICS Logon</U>ICSLogon file. Default: "ICS.ini". The filename is interpreted relative to WinBoard's installation directory (the directory containing WinBoard.exe).</P>
<B><SUP><P>K#</SUP> /autocomm </B>or <B>/xautocomm</B>, or<B> <SUP>K#</SUP> /autoComment<I> true|false</P>
</B></I><P>Sets the <U>Auto Comment</U>AutoCommentCmd option. Default: False.</P>
<B><SUP><P>K#</SUP> /autoflag</B> or <B>/xautoflag</B>,<B> </B>or<B> <SUP>K#</SUP> /autoCallFlag<I> true|false</P>
</B></I><P>Sets the <U>Auto FlagAutoFlag</U> option. Default: False.</P>
<B><SUP><P>K#</SUP> /autobs</B> or <B>/xautobs</B>,<B> </B>or<B> <SUP>K#</SUP> /autoObserve<I> true|false</P>
</B></I><P>Sets the <U>Auto Observe</U>autoObserveCmd option. Default: False.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /autoKibitz</P>
</B><P>Kibitzes the engines last thinking output (depth, score, time, speed, PV) to the ICS in zippy mode. Show Thinking must be on for this option to work.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /moves</B> or <B>/xmoves</B>,<B> </B>or<B> <SUP>K#</SUP> /getMoveList<I> true|false</P>
</B></I><P>Sets the <U>Get Move List</U>getMoveListCmd option. Default: True.</P>
<B><SUP><P>K#</SUP> /edit<SUP> </B></SUP> or <B>/xedit</B>,<B> </B>or<B> <SUP>K#</SUP> /localLineEditing<I> true|false</P>
</B></I><P>Sets the <U>Local Line Editing</U>localLineEditing option. Default: True.</P>
<B><SUP><P>K#</SUP> /quiet </B>or <B>/xquiet</B>, or<B> <SUP>K#</SUP> /quietPlay<I> true|false</P>
</B></I><P>Sets the <U>Quiet Play</U>quietPlayCmd option. Default: False</P>
<B><SUP><P>K#</SUP> /blindfold <I>true|false</P>
</B></I><P>Sets the <U>Blindfold</U>BlindfoldCmd option. Default: False</P>
<B><SUP><P>K#</SUP>/pre </B>or<B> <SUP>K#</SUP>/xpre</B>, or<B> <SUP>K#</SUP> /premove<I> true|false</P>
</B></I><P>Sets the <U>Premove</U>PremoveCmd option. If set to True, the premove feature is enabled. If set to False, premove is disabled and the other <U>Premove</U>PremoveCmd settings are ignored. Default: False.</P>
<B><SUP><P>K#</SUP>/prewhite </B>or<B> <SUP>K#</SUP>/xprewhite</B>, or <B><SUP>K#</SUP> /premoveWhite<I> true|false</P>
</I><SUP><P>K#</SUP> /premoveWhiteText<I> movetext</P>
</B></I><P>If <B>premoveWhite</B> is set to True and you are playing white in an ICS game, the text specified by the <B>premoveWhiteText</B> option is sent to the ICS as soon as the game starts.  These options can be set from the <U>Premove</U>PremoveCmd section of the <U>ICS OptionsICSOptions</U> dialog box. The default for <B>premoveWhite</B> is False.</P>
<B><SUP><P>K#</SUP>/preblack </B>or<B> <SUP>K#</SUP>/xpreblack</B>, or <B><SUP>K#</SUP> /premoveBlack<I> true|false</P>
</I><SUP><P>K#</SUP> /premoveBlackText<I> movetext</P>
</B></I><P>If <B>premoveBlack</B> is set to True and you are playing black in an ICS game, the text specified by the <B>premoveBlackText</B> option is sent to the ICS as soon as the first move is received from your opponent, even if you make a different premove on the board before the first white move is received. These options can be set from the <U>Premove</U>PremoveCmd section of the <U>ICS OptionsICSOptions</U> dialog box. The default for <B>premoveBlack</B> is False.</P>
</FONT><B><SUP><FONT SIZE=2><P>K#</SUP>/alarm </B>or<B> <SUP>K#</SUP>/xalarm</B>, or <B><SUP>K#</SUP>/icsAlarm <I>true|false</P>
</I><SUP><P>K#</SUP>/icsAlarmTime <I>milliseconds</P>
</B></I><P>When <B>icsAlarm</B> is set to True, the <U>alarm sound</U>soundIcsAlarm is played when your clock counts down to <B>icsAlarmTime</B> seconds.  For ICS games with time controls that include an increment, the alarm will sound each time the clock counts down to the <B>icsAlarmTime</B>.  The <B>icsAlarmTime</B> can be set by selecting <U>ICS Alarm</U>ICSAlarm from the <U>ICS optionsICSOptions</U> dialog. The default is 5 seconds.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>&nbsp;</P>
<SUP><P>+K$#</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><FONT FACE="Arial" SIZE=2>Load and Save Options</P>
<SUP><P>K#</SUP> /lgf </B>or<B> <SUP>K#</SUP> /loadGameFile <I>filename</I><BR>
<SUP>K#</SUP> /lgi </B>or<B> <SUP>K#</SUP> /loadGameIndex <I>N</P>
</B></I><P>If loadGameFile is set, WinBoard reads the specified game file at startup. You can leave out the name of this option and give just the file name, which is handy if you want to configure WinBoard as a game viewer with a browser such as the Windows Explorer or Netscape. The filename is interpreted relative to WinBoard's initial working directory. The filename "-" specifies the standard input. If there is more than one game in the file, WinBoard pops up a menu of the available games, with entries based on their PGN tags. If loadGameIndex is set to <I>N, </I>the menu is suppressed and the <I>N</I>th game found in the file is loaded immediately.</P>
<B><SUP><P>K#</SUP> /td </B>or<B> <SUP>K#</SUP> /timeDelay <I>seconds</P>
</B></I><P>Time delay between moves during <U>Load Game</U>LoadGame. Fractional seconds are allowed; try 0.4. A time delay value of -1 tells WinBoard not to step through game files automatically. Default: 1 second.</P>
<B><SUP><P>K#</SUP> /sgf </B>or<B> <SUP>K#</SUP> /saveGameFile <I>filename</P>
</B></I><P>If this option is set, WinBoard appends a record of every game played to the specified file. The filename is interpreted relative to WinBoard's initial working directory. The filename "-" specifies the standard output.</P>
<B><SUP><P>K#</SUP> /autosave</B> or <B>/xautosave</B>,<B> </B>or<B> <SUP>K#</SUP> /autoSaveGames<I> true|false</P>
</B></I><P>If this option is True, at the end of every game WinBoard prompts you for a filename and appends a record of the game to the file you specify. Ignored if saveGameFile is set. Default: False.</P>
<B><SUP><P>K#</SUP> /lpf </B>or<B> <SUP>K#</SUP> /loadPositionFile <I>filename</I><BR>
<SUP>K#</SUP> /lpi </B>or<B> <SUP>K#</SUP> /loadPositionIndex <I>N</P>
</B></I><P>If loadPositionFile is set, WinBoard loads the specified position file at startup. The filename is interpreted relative to WinBoard's initial working directory. The filename "-" specifies the standard input. If loadPositionIndex is set to <I>N</I>, the <I>N</I>th position found in the file is loaded; otherwise the first is loaded.</P>
<B><SUP><P>K#</SUP> /spf </B>or<B> <SUP>K#</SUP> /savePositionFile <I>filename</P>
</B></I><P>If this option is set, WinBoard appends the final position reached in every game played to the specified file. The filename is interpreted relative to WinBoard's initial working directory. The file name "-" specifies the standard output.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /pgnExtendedInfo <I>true|false</P>
</B></I><P>If this option is set, WinBoard saves depth, score and time used for each move that the engine found as a comment in the PGN file.</P>
<B><SUP><P>K#</SUP> /pgnEventHeader <I>string</P>
</B></I><P>Sets the name used in the PGN event tag to <I>string</I>.</P>
<B><SUP><P>K#</SUP> /saveOutOfBookInfo <I>true|false</P>
</B></I><P>Include the information on how the engine(s) game out of its opening book in a special ‘annotator’ tag with the PGN file.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /oldsave </B>or <B>/xoldsave</B>, or<B> <SUP>K#</SUP> /oldSaveStyle<I> true|false</P>
</B></I><P>If this option is False (the default), WinBoard saves games in PGN (portable game notation) and positions in FEN (Forsythe-Edwards notation). If the option is True, a save style that is compatible with older versions of WinBoard (and of xboard) is used instead.</P>
<B><SUP><P>K#</SUP> /debug</B> or <B>/xdebug</B>,<B> </B>or<B> <SUP>K#</SUP> /debugMode<I> true|false</P>
</B></I><P>Writes debugging information to the file &quot;WinBoard.debug&quot;, including all commands sent to the chess engine, all output received from it, and all commands sent to ICS. You can press Ctrl+Alt+F12 to turn this option on or off while WinBoard is running. Each time you turn it on, any existing debug file is overwritten.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /debugFile<SUP> </SUP> <I>filename</I> </B>or<B> <SUP>K#</SUP> /nameOfDebugFile<I> filename</P>
</B></I><P>Sets the name of the file to which WinBoard saves debug information (including all communication to and from the engines).</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /engineDebugOutput<SUP> </SUP> <I>number</P>
</B></I><P>Specifies how WinBoard should handle unsollicited output from the engine, with respect to saing it in the debug file. The output is further (hopefully) ignored. If <I>numbe</I>r=0, WinBoard rfrains from writing such spurious output to the debug file. If<I> numbe</I>r=1, all engine output is written faithfully to the debug file. If <I> numbe</I>r=2, any protocol-violating line is prefixed with a ‘#’ character, as the engine itself should have done if it wanted to submit info for inclusion in the debug file.</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>This option is provided for the benefit of applications that use the debug file as a source of informtion, such as the broadcater of live games TLCV / TLCS. Such applications can be protected from spurious engine output that might otherwise confuse them.</P>
</FONT><FONT SIZE=2><P>&nbsp;</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>&nbsp;</P>
<SUP><P>+K$#</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><FONT FACE="Arial" SIZE=2>User Interface Options</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /hideThinkingFromHuman<I> true|false</P>
</B></I><P>Prevents the engine thinking output to appear in the display, without necessitating to suppress the sending of this information altogether (so it can still appear in the PGN).</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /top </B>or <B>/xtop</B>, or<B> <SUP>K#</SUP> /alwaysOnTop<I> true|false</P>
</B></I><P>Sets the <U>Always On Top</U>AlwaysOnTop option. Default: False.</P>
<B><SUP><P>K#</SUP> /queen</B> or <B>/xqueen</B>,<B> </B>or<B> <SUP>K#</SUP> /alwaysPromoteToQueen<I> true|false</P>
</B></I><P>Sets the <U>Always Queen</U>AlwaysQueen option. Default: False.</P>
<B><SUP><P>K#</SUP>/drag</B> or <B>/xdrag</B>,<B> </B>or<B> <SUP>K#</SUP>/animateDragging<I> true|false</P>
</B></I><P>Sets the <U>Animate Dragging</U>animateDragging option. Default: True.</P>
<B><SUP><P>K#</SUP>/animate </B>or <B>/xanimate</B>, or<B> <SUP>K#</SUP>/animateMoving<I> true|false</P>
</B></I><P>Sets the <U>Animate Moving</U>animateMoving option. Default: True.</P>
<B><SUP><P>K#</SUP> /flip </B>or <B>/xflip</B>, or<B> <SUP>K#</SUP> /flipView<I> true|false</P>
</B></I><P>If Auto Flip View is not set, or if you are observing but not participating in a game, then the positioning of the board at the start of each game depends on the flipView option.  If flipView is False (the default), the board is positioned so that the white pawns move from the bottom to the top; if True, the black pawns move from the bottom to the top. In any case, the <U>Flip View</U>FlipView menu command can be used to flip the board after the game starts</P>
</FONT><B><SUP><FONT SIZE=2><P>K#</SUP>/autoflip</B> or <B>/xautoflip</B>, or <SUP>K#</SUP><B>/autoFlipView <I>true|false</P>
</B></I></FONT><FONT FACE="Arial" SIZE=2><P>Sets the <U>Auto Flip View</U>AutoFlipView option. Default: True.</P>
</FONT><B><SUP><FONT SIZE=2><P>K#</SUP>/autoraise</B> or <B>/xautoraise</B>, or <SUP>K#</SUP><B>/autoRaiseBoard <I>true|false</P>
</B></I></FONT><FONT FACE="Arial" SIZE=2><P>Sets the <U>Auto Raise Board</U>AutoFlipView option. Default: True.</P>
<B><SUP><P>K#</SUP>/highdrag </B>or <B>/xhighdrag</B>, or<B> <SUP>K#</SUP>/highlightDragging <I>true|false</P>
</B></I><P>Sets the <U>Highlight Dragging</U>highlightDragging option. Default: False.</P>
<B><SUP><P>K#</SUP>/highlight </B>or <B>/xhighlight</B>, or<B> <SUP>K#</SUP>/highlightLastMove<I> true|false</P>
</B></I><P>Sets the <U>Highlight Last Move</U>highlightLastMoveOpt option. Default: False.</P>
<B><SUP><P>K#</SUP> /exit</B> or <B>/xexit</B>,<B> </B>or<B> <SUP>K#</SUP> /popupExitMessage<I> true|false</P>
</B></I><P>Sets the <U>Popup Exit Message</U>popupExitMessageCmd menu option. Default: False.</P>
<B><SUP><P>K#</SUP> /popup</B> or <B>/xpopup</B>,<B> </B>or<B> <SUP>K#</SUP> /popupMoveErrors<I> true|false</P>
</B></I><P>Sets the <U>Popup Move Errors</U>popupMoveErrorsCmd menu option. Default: False.</P>
<B><SUP><P>K#</SUP> /coords </B>or <B>/xcoords</B>, or<B> <SUP>K#</SUP> /showCoords<I> true|false</P>
</B></I><P>Sets the <U>Show Coords</U>showCoords option. Default: False.</P>
<B><SUP><P>K#</SUP> /legal </B>or <B>/xlegal</B>, or<B> <SUP>K#</SUP> /testLegality<I> true|false</P>
</B></I><P>Sets the <U>Test Legality</U>testLegalityCmd option. Default: True.</P>
<B><SUP><P>K#</SUP> /size </B>or<B> <SUP>K#</SUP> /boardSize <I>sizename</P>
</B></I><P>Sets the <U>Board Size</U>BoardSizeCmd option. Also chooses which board size any following Font options will affect. The default is the largest size that will fit on your screen.</P>
<B><SUP><P>K#</SUP>/wpc</B> or <SUP>K<B>#</SUP> /whitePieceColor <I>color<BR>
</I><SUP>K#</SUP>/bpc </B>or <B><SUP>K#</SUP> /blackPieceColor <I>color<BR>
</I><SUP>K#</SUP>/lsc </B>or<B><I> </I><SUP>K#</SUP> /lightSquareColor <I>color</I><SUP> </SUP><BR>
<SUP>K#</SUP>/dsc </B>or<B> <SUP>K#</SUP> /darkSquareColor <I>color</I><SUP> </P>
</B></SUP><P>Color specifications for white pieces, black pieces, light squares, and dark squares. Colors can be specified only by red/green/blue intensity, either in hexadecimal (as <I>#rrggbb</I>) or in decimal (as <I>rrr,ggg,bbb</I>). In the latter format, you must enclose the string in quotation marks if you leave spaces after the commas. The defaults are respectively #FFFFCC, #202020, #C8C365, and #77A26D. Available on the <U>Board Colors</U>BoardColors section of the <U>Board Options</U>BoardOptions dialog.</P>
<P>If you are using a <SUP>K#</SUP> grayscale monitor, try setting the colors to:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>-whitePieceColor:#FFFFFF<BR>
-blackPieceColor:#000000<BR>
-lightSquareColor:#CCCCCC<BR>
-darkSquareColor:#999999</P></DIR>

</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP>/hsc </B>or<B> <SUP>K#</SUP> /highlightSquareColor <I>color</I><SUP> </SUP><BR>
<SUP>K#</SUP>/phc </B>or <B><SUP>K#</SUP> /premoveHighlightColor <I>color</I><SUP> </P>
</B></SUP><P>Color specifications for the <U>Highlight Last Move</U>HighlightLastMove and <U>Premove</U>PremoveCmd options, respectively. Colors can be specified only by red/green/blue intensity, either in hexadecimal (as <I>#rrggbb</I>) or in decimal (as <I>rrr,ggg,bbb</I>). In the latter format, you must enclose the string in quotation marks if you leave spaces after the commas. The defaults are respectively #FFFF00 and #FF0000, respectively.</P>
<B><SUP><P>K#</SUP> /mono</B> or <B>/xmono</B>,<B> </B>or<B> <SUP>K#</SUP> /monoMode<I> true|false</P>
</B></I><P>Determines whether WinBoard displays its pieces and squares in black and white (True) or color (False, the default). Available in the <U>Board Colors</U>BoardColors section of the <U>Board Options</U>BoardOptions dialog.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /flipBlack<I> true|false</P>
</B></I><P>Determines whether WinBoard displays the black pieces upside down (or the white pieces in Flip View). Useful with Shogi with the traditional Japanese pieces, which are not distinguished by color but by orientation.</P>
<B><SUP><P>K#</SUP> /allWhite<I> true|false</P>
</B></I><P>Determines whether the white piece bitmaps will be used to display black pieces. The white pieces have a dark outline, which the black pieces lack. This makes the latter look vague if the color you give them is not very dark.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /renderPiecesWithFont <I>fontname</P>
</B></I><P>Uses the named true-type font to render the pieces, rather than the built-in bitmaps. The font must be installed on your computer. If the name starts with a *  it is ignored, allowing you to easily disable a font temporarily in the whinboard.ini file.</P>
<B><SUP><P>K#</SUP> /fontPieceToCharTable <I>characterstring</P>
</B></I><P>If font-based rendering of the pieces is used, this table specifies which character of the font alphabet should be used for which piece. The format of the character strings is the same as that of the argument of /pieceToCharTable.</P>
<B><SUP><P>K#</SUP> /fontPieceSize <I>number</P>
</B></I><P>The number gives the size of the piece, as a percentage of the square size.</P>
<B><SUP><P>K#</SUP>/fontPieceBackColorWhite <I>color<BR>
</I><SUP>K#</SUP>/fontPieceForeColorWhite <I>color<BR>
</I><SUP>K#</SUP>/fontPieceBackColorBlack <I>color<BR>
</I><SUP>K#</SUP>/fontPieceForeColorBlack <I>color</I><SUP> </P>
</B></SUP><P>Color specifications for white pieces, black pieces that are generated with font-based rendering.</P>
<B><SUP><P>K#</SUP> /liteBackTextureFile <I>filename</P>
</I><SUP><P>K#</SUP> /darkBackTextureFile <I>filename</P>
</B></I><P>The filename indicates a bitmap file that should be used to display the light or dark squares, allowing you to make boards that look like wood, marble, etc. A filename starting with * is ignored.</P>
<B><SUP><P>K#</SUP> /liteBackTextureMode <I>number</P>
</I><SUP><P>K#</SUP> /darkBackTextureMode <I>number</P>
</B></I></FONT><FONT SIZE=2 COLOR="#ff0000"><P>The number indicates the way the files given in the background-texture options should be used to fill in the squares. Valid texture modes are 1 (default) and 2. In mode 1 the squares are taken from portions of the texture bitmap and copied without further processing. In mode 2, squares can also be rotated, mirrored and so on in order to provide a little more variety to the texture. The operations are selected at random so the board will look slightly different every time the program is run.<BR>
</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /overideLineGap <I>number</P>
</B></I><P>The number specifies the width, in pixels, of the grid lines used to separate the squares. If it is very small (like a single pixel), it becomes vey hard to see which squares are highlighted (to indicate the last move), as this highlighting is a color change of these grid lines. Highlighting the moves with an arrow is then recommended.</P>
<B><SUP><P>#</SUP> /highlightMovesWithArrow <I>true|false</P>
</B></I><P>If this option is true, a big, fat arrow is drawn to indicate the last move.</P>
<B><SUP><P>#</SUP> /highlightArrowColor <I>color</P>
</B></I><P>Specifies the color of the arrow that highlights the moves.</P>
<B><SUP><P>K#</SUP> /evalHistoColorWhite <I>color</P>
</I><SUP><P>K#</SUP> /evalHistoColorBlack <I>color</P>
</B></I></FONT><FONT SIZE=2 COLOR="#ff0000"><P>Specifies the colors to be used to plot the white and black scores in the evaluation graph.<BR>
</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /colorShout<I> &quot;effects color&quot;<BR>
</I><SUP>K#</SUP> /colorSShout <I>&quot;effects color&quot;<BR>
</I><SUP>K#</SUP> /colorChannel1 <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorChannel <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorKibitz <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorTell <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorChallenge <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorRequest <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorSeek <I>&quot;effects color&quot;</I><BR>
<SUP>K#</SUP> /colorNormal <I>&quot;effects color&quot;</P>
</B></I><P>Select colors and effects to colorize messages in the ICS Interaction window. The effects may be any combination of <B>b</B>old, <B>i</B>talic, <B>u</B>nderline, and <B>s</B>trikeout. Colors are specified as for squares and pieces. Available on the <U>ICS Interaction Colors</U>ICSInteractionColors section of the <U>ICS Options</U>ICSOptions dialog. Limitation: On 256 color displays, Windows chooses the nearest solid color from the system palette, which will not always be close to the color you selected.</P>
<B><SUP><P>K#</SUP> /colorBackground <I>color</P>
</B></I><P>Sets the background color for the ICS Interaction window. Available on the <U>ICS Interaction Colors</U>ICSInteractionColors section of the <U>ICS Options</U>ICSOptions dialog.</P>
<B><SUP><P>K#</SUP> /colorize<SUP> </B></SUP>or <B>/xcolorize</B>, or<B> <SUP>K#</SUP> /colorizeMessages<I> true|false</P>
</B></I><P>If True, WinBoard colorizes messages in the ICS Interaction window with the colors listed above. Default: True. Available in the <U>ICS Interaction Colors</U>ICSInteractionColors section of the <U>ICS Options</U>ICSOptions dialog.</P>
<B><SUP><P>K#</SUP> /clockFont &quot;<I>fontname:size effects</I>&quot;<BR>
<SUP>K#</SUP> /messageFont &quot;<I>fontname:size effects</I>&quot;<BR>
<SUP>K#</SUP> /coordFont &quot;<I>fontname:size effects</I>&quot;<BR>
<SUP>K#</SUP> /tagsFont &quot;<I>fontname:size effects</I>&quot;<BR>
<SUP>K#</SUP> /commentFont &quot;<I>fontname:size effects</I>&quot;<BR>
<SUP>K#</SUP> /icsFont &quot;<I>fontname:size effects</I>&quot;</P>
</B><P>The fonts used respectively for the clocks, the message display line, rank and file coordinate labels, the Edit Tags dialog, the Edit Comment dialog, and the ICS Interaction window. These options may be given more than once. Each occurrence affects the fonts for the current board size; that is, the size given in the last preceding /boardSize option, if any, or else the default size. The font size may contain a decimal point, and the effects may be any combination of <B>b</B>old, <B>i</B>talic, <B>u</B>nderline, and <B>s</B>trikeout. Example: </FONT><FONT FACE="Courier New" SIZE=1>/clockFont="Arial:20.0 bi".</FONT><FONT FACE="Arial" SIZE=2> Available on the <U>Fonts</U>Fonts menu.</P>
<B><SUP><P>K#</SUP></FONT><FONT SIZE=2> /soundShout<I> sound<BR>
</I></FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundSShout <I>sound<BR>
</I></FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundChannel1 <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundChannel <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundKibitz <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundTell <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundChallenge <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundRequest <I>sound</I><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundMove <I>sound</I></FONT><SUP><FONT FACE="Arial" SIZE=2> </SUP></FONT><FONT SIZE=2><BR>
</FONT><SUP><FONT FACE="Arial" SIZE=2>K#</SUP></FONT><FONT SIZE=2> /soundBell <I>sound</I></FONT><SUP><FONT FACE="Arial" SIZE=2> </P>
<P>K#</SUP> /soundIcsWin <I>sound</I><BR>
<SUP>K#</SUP> /soundIcsLoss <I>sound</I><SUP> </SUP><BR>
<SUP>K#</SUP> /soundIcsDraw <I>sound</I><SUP> </SUP><BR>
<SUP>K#</SUP> /soundIcsUnfinished <I>sound</I><SUP> </P>
<P>K#</SUP> /soundIcsAlarm <I>sound</I><SUP> </P>
</B></SUP><P>Associate sounds with WinBoard events. Most of the events are the same ones that cause text colorization. In addition, <B>soundMove</B> is played if a chess engine or another player makes a move. <B>SoundBell</B> is played if the chess server sends an ASCII BEL character (Ctrl+G). Available on the <U>Sounds</U>Sounds menu.</P>
</FONT><B><FONT SIZE=2><P>SoundIcsWin</B>, <B>soundIcsLoss</B>, <B>soundIcsDraw</B> and <B>soundIcsUnfinished</B> are played at the conclusion of an ICS game.  The result of the game determines which sound is played.</P>
<B><P>SoundIcsAlarm</B> is played when your game clock counts down to <U>icsAlarmTimeicsAlarmTime</U>. </P>
</FONT><FONT FACE="Arial" SIZE=2><P>The <I>sound</I> argument may be one of the following:</P>

<UL>
<LI>The name of a </FONT><FONT FACE="Courier New" SIZE=2>.wav</FONT><FONT FACE="Arial" SIZE=2> file. The filename is interpreted relative to WinBoard's installation directory (the directory containing WinBoard.exe).</LI>
</FONT><FONT FACE="Courier New" SIZE=2><LI>$</FONT><FONT FACE="Arial" SIZE=2>, indicating the default system sound.</LI>
</FONT><FONT FACE="Courier New" SIZE=2><LI>!</FONT><FONT FACE="Arial" SIZE=2> followed by the name of a built-in WinBoard wave resource.</LI>
</FONT><FONT FACE="Courier New" SIZE=2><LI>!</FONT><FONT FACE="Arial" SIZE=2> alone, or &quot;&quot; (empty string), indicating silence.</LI></UL>

<P>The default for soundMove and soundBell is </FONT><FONT FACE="Courier New" SIZE=2>$</FONT><FONT FACE="Arial" SIZE=2>, while the others default to silence.</P>
<B><SUP><P>K#</SUP>/icsMenu={<I>entries</I>} </B>or <B>/icsMenu=@<I>filename</P>
</B></I><P>This option lets you customize the right-button <U>context menu</U>ICSInteractionContextMenu that is available in the upper (output) pane of the ICS Interaction window. It consists of a list of menu entries, one per line. If the option value starts with an @ sign, it is the name of a file that contains the entries. Each entry contains either four fields separated by commas or the single character </FONT><FONT FACE="Courier New" SIZE=2>"-"</FONT><FONT FACE="Arial" SIZE=2>. The fields are:</P>
<OL>

</FONT><FONT SIZE=2><LI>The menu text. If this field begins with </FONT><FONT FACE="Courier New" SIZE=2>"|"</FONT><FONT SIZE=2>, the item begins a new column in the menu and the </FONT><FONT FACE="Courier New" SIZE=2>"|"</FONT><FONT SIZE=2> is not shown. If this field contains an </FONT><FONT FACE="Courier New" SIZE=2>"&amp;"</FONT><FONT SIZE=2>, the character after the ampersand is underlined in the menu and acts as a keyboard shortcut for the item when the menu is displayed. Do not assign the same shortcut key to two different menu items.</LI>
</FONT><FONT FACE="Arial" SIZE=2><LI>Text to insert into the input pane. The text cannot include a comma. You can use ICS aliases to get around this limitation.</LI>
<LI>A flag (1 or 0) saying whether to insert a space and <I>name </I>(see <U>above</U>Tell) after the text. If you set this flag, you might also want to put "(name)" into the menu text as a memory aid.</LI>
<LI>A flag (1 or 0) saying whether the result should be sent immediately to ICS or left in the input pane for further editing.</LI></OL>

</FONT><FONT SIZE=2><P>The entry </FONT><FONT FACE="Courier New" SIZE=2>"-"</FONT><FONT SIZE=2> produces a separator line in the menu. The top three menu entries are always <B>Copy and Paste</B>, <B>Copy</B>, and <B>Paste</B>, but you have full control over the rest of the menu.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>The default menu is:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>–<BR>
&amp;Who,who,0,1<BR>
Playe&amp;rs,players,0,1<BR>
&amp;Games,games,0,1<BR>
&amp;Sought,sought,0,1<BR>
|&amp;Tell (name),tell,1,0<BR>
M&amp;essage (name),message,1,0<BR>
–<BR>
&amp;Finger (name),finger,1,1<BR>
&amp;Vars (name),vars,1,1<BR>
&amp;Observe (name),observe,1,1<BR>
&amp;Match (name),match,1,1<BR>
Pl&amp;ay (name),play,1,1</P></DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>There is no graphical user interface to set this option. To change it, edit your <U>settings</U>settings file with a plain text editor such as Notepad.</P>
<B><SUP><P>K#</SUP>/icsNames={<I>names</I>} </B>or <B>/icsNames=@<I>filename</P>
</B></I><P>This option lets you customize the drop-down list of ICS names that appears in the WinBoard startup dialog. It consists of a list of strings, one per line. If the option value starts with an @ sign, it is the name of a file that contains the strings. When you select a string from the drop-down list, WinBoard prepends the text &quot;/ics /icsHost=&quot; and adds the result to the command-line options. There is no graphical user interface to set this option. To change it, edit your <U>settings</U>settings file with a plain text editor such as Notepad.</P>
<P>&nbsp;</P>
<B><SUP><P>K#</SUP>/firstChessProgramNames={<I>names</I>} </B>or <B>/firstChessProgramNames="@<I>filename</I>"</P>
</B><P>This option lets you customize the first drop-down list of chess engine names that appears in the WinBoard startup dialog. It consists of a list of strings, one per line. If the option value starts with an @ sign, it is the name of a file that contains the strings. When you select a string from the drop-down list, WinBoard prepends the text &quot;/cp /firstChessProgram=&quot; and adds the result to the command-line options. </P>

<P>There is no graphical user interface to set this option. To change it, edit your <U>settings</U>settings file with a plain text editor such as Notepad. Example:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=1><P>/firstChessProgramNames={GNUChess<BR>
WCrafty-15_11 /fd="C:\Program Files\Crafty"<BR>
ArasanX /fd="C:\Program Files\Arasan\Arasan 4.1"<BR>
"EXchess xb" /fd=C:\EXchess<BR>
Comet-WB /fd=C:\Comet<BR>
}</P></DIR>

</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP>/secondChessProgramNames={<I>names</I>}</B> or <B>/secondChessProgramNames="@<I>filename</I>"</P>
</B><P>This option lets you customize the second drop-down list of chess engine names that appears in the WinBoard startup dialog. It consists of a list of strings, one per line. If the option value starts with an @ sign, it is the name of a file that contains the strings. When you select a string from the drop-down list, WinBoard prepends the text &quot;/cp /secondChessProgram=&quot; and adds the result to the command-line options.</P>

<P>There is no graphical user interface to set this option. To change it, edit your <U>settings</U>settings file with a plain text editor such as Notepad. Example:</P><DIR>

</FONT><FONT FACE="Courier" SIZE=1><P>/secondChessProgramNames={GNUChess<BR>
WCrafty-15_11 /sd="C:\\Program Files\\Crafty\"<BR>
ArasanX /sd="C:\Program Files\Arasan\Arasan 4.1"<BR>
"EXchess xb" /sd=C:\EXchess<BR>
Comet-WB /sd=C:\Comet<BR>
}</P></DIR>

</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP>/x=<I>xcoord  </I>/y=<I>ycoord</P>
</B></I><P>Sets the initial location of the board window, giving the screen coordinates of the upper left-hand corner. Both arguments must be given together.</P>
<B><SUP><P>K#</SUP>/analysisX=<I>xcoord  </I>/analysisY=<I>ycoord</I>  /analysisW=<I>width</I>  /analysisH=<I>height</P>
</B></I><P>Sets the initial location and size of the Analysis window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/commentX=<I>xcoord  </I>/commentY=<I>ycoord</I>  /commentW=<I>width</I>  /commentH=<I>height</P>
</B></I><P>Sets the initial location and size of the Comment window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/gameListX=<I>xcoord  </I>/gameListY=<I>ycoord</I>  /gameListW=<I>width</I>  /gameListH=<I>height</P>
</B></I><P>Sets the initial location and size of the Game List window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/icsX=<I>xcoord  </I>/icsY=<I>ycoord</I>  /icsW=<I>width</I>  /icsH=<I>height</P>
</B></I><P>Sets the initial location and size of the ICS Interaction window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/tagsX=<I>xcoord  </I>/tagsY=<I>ycoord</I>  /tagsW=<I>width</I>  /tagsH=<I>height</P>
</B></I><P>Sets the initial location and size of the Tags window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP>/moveHistoryX=<I>xcoord  </I>moveHistoryY=<I>ycoord</I>  /moveHistoryW=<I>width</I>  /moveHistoryH=<I>height</P>
</B></I><P>Sets the initial location and size of the move-history window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/evalGraphX=<I>xcoord  </I>/evalGraphY=<I>ycoord</I>  /evalGraphW=<I>width</I>  /evalGraphH=<I>height</P>
</B></I><P>Sets the initial location and size of the evaluation-graph window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/engineOutputX=<I>xcoord  </I>/engineOutputY=<I>ycoord</I>  </P>
<SUP><P>K#</SUP>/engineOutputW=<I>width</I>  /engineOutputH=<I>height</P>
</B></I><P>Sets the initial location and size of the engine-output window, giving the screen coordinates of the upper left-hand corner, the width, and the height. All four arguments must be given together.</P>
<B><SUP><P>K#</SUP>/engineOutputUp <I>true|false </P>
</I><SUP><P>K#</SUP>/evalGraphUp <I>true|false</P>
</I><SUP><P>K#</SUP>/moveHistoryUp <I>true|false</P>
</B></I><P>If set to True, the corresponding window is displayed, if False, the window is absent.</P>
<B><SUP><P>K#</SUP>/stickyWindows <I>true|false</P>
</B></I><P>Not an album of the Rolling stones.</P>
<B><SUP><P>K#</SUP>/autoDisplayComments <I>true|false</P>
</I><SUP><P>K#</SUP>/autoDisplayTags <I>true|false</P>
</B></I><P>If set to True, these options cause the window with the move comments, and the window with PGN tags, respectively, to pop up automatically when such tags or comments are encountered during the replaying a stored or loaded game.</P>
<B><SUP><P>+K$#</B></SUP></FONT><FONT FACE="Arial" SIZE=1 COLOR="#ff0000"> </FONT><B><FONT FACE="Arial" SIZE=2 COLOR="#ff0000">Adjudicaton options</P>
<SUP><P>K#</SUP> /adjudicateLossThreshold <I>scorethreshold</P>
</B></I><P>If the given value is non-zero, WinBoard adjudicates the game as a loss if both engines agree for a duration of 6 consecutive ply that the score is below the given score threshold for that engine. Make sure the score is interpreted properly by WinBoard, using /firstScoreAbs and /secondScoreAbs if needed.</P>
<B><SUP><P>K#</SUP> /adjudicateDrawMoves <I>number</P>
</B></I><P>If the given value is non-zero, WinBoard adjudicates the game as a draw if after the given <I>number</I> of moves it was not yet decided.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /testClaims<I> true|false</P>
</B></I><P>If this option is True, WinBoard verifies all result claims made by engines, and those who send false claims will forfeit the game because of it. Legality-testing must be on for this option to work.</P>
<B><SUP><P>K#</SUP> /materialDraws<I> true|false</P>
</B></I><P>If this option is True, WinBoard adjudicates games as draws when there is no sufficient material left to create a checkmate. This applies to KBKB with like bishops, and to KBK, KNK and KK. Legality-testing must be on for this option to work.</P>
<B><SUP><P>K#</SUP> /trivialDraws<I> true|false</P>
</B></I><P>If this option is True, WinBoard adjudicates games as draws that cannot be usualy won without opponent assistance. This applies to KBKB with unlike bishops, and to KBKN, KNKN, KNNK, KRKR and KQKQ. The draw is called after 6 ply into these end-games, to allow quick mates that can occur in some positions. KQKQ does not really belong in this category, and might be taken out in the future. (When bitbase-based adjudications are implemented.) Legality-testing must be on for this option to work.</P>
<B><SUP><P>K#</SUP> /ruleMoves <I>number</P>
</B></I><P>If the given value is non-zero, WinBoard adjudicates the game as a draw after the given <I>number</I> of consecutive reversible moves. Engines can claim draws after 50 moves, irrespective of the value of <I>number</I>.</P>
<B><SUP><P>K#</SUP> /repeatsToDraw <I>number</P>
</B></I><P>If the given value is non-zero, WinBoard adjudicates the game as a draw if a position is repeated the given <I>number</I> of times. Engines can claim draws after 3 repeats, (on the 3rd occurrence, actually), irrespective of the value of <I>number</I>. Beware that positions that have different castling or en-passant rights do not count as repeats, WinBoard is fully e.p. and castling aware!</P>
<B><SUP><P>K#</SUP> /checkMates<I> true|false</P>
</B></I><P>If this option is True, WinBoard detects all checkmates and stalemates, and ends the game as soon as they occur. Legality-testing must be on for this option to work.</P>
<B><P>&nbsp;</P>
</FONT><SUP><FONT FACE="Arial" SIZE=2><P>+K$#</B></SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><B><FONT FACE="Arial" SIZE=2>Other Options</P>
<SUP><P>K#</SUP> /ncp</B> or <B>/xncp</B>,<B> </B>or<B> <SUP>K#</SUP> /noChessProgram<I> true|false</P>
</B></I><P>If this option is True, WinBoard acts as a passive chessboard; it does not start a chess program or connect to ICS. This option also sets clockMode to False. Default: False.</P>
<B><SUP><P>K#</SUP> /mode</B> or <B><SUP>K#</SUP> /initialMode <I>modename</P>
</B></I><P>If this option is given, WinBoard selects the given <I>modename</I> from the <U>Mode menu</U>ModeMenu after starting and (if applicable) processing the <U>loadGameFile</U>loadGameFile or <U>loadPositionFile</U>loadPositionFile option. Default: "". Other supported values are TwoMachines, AnalyzeFile, Analysis, MachineWhite, MachineBlack, EditGame, EditPosition, and Training.</P>
<B><SUP><P>K#</SUP> /variant</B> <B><I> varname</P>
</B></I></FONT><FONT SIZE=2><P>Activates preliminary, partial support for playing chess variants against a local engine or editing variant games. This flag is not needed in ICS mode. Recognized variant names are:</P>
<P>normal&#9;Normal chess<BR>
wildcastle&#9;Shuffle chess, king can castle from d file<BR>
nocastle&#9;Shuffle chess, no castling allowed<BR>
fischerandom&#9;Fischer Random shuffle chess<BR>
bughouse&#9;Bughouse, ICC/FICS rules<BR>
crazyhouse&#9;Crazyhouse, ICC/FICS rules<BR>
losers  &#9;Lose all pieces or get mated (ICC wild 17)<BR>
suicide&#9;Lose all pieces including king (FICS)<BR>
giveaway&#9;Try to have no legal moves (ICC wild 26)<BR>
twokings&#9;Weird ICC wild 9<BR>
kriegspiel&#9;Opponent's pieces are invisible<BR>
atomic   &#9;Capturing piece explodes (ICC wild 27)<BR>
3check&#9;Win by giving check 3 times (ICC wild 25)</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>xiangqi&#9;Chinese Chess (on a 9x10 board)<BR>
shogi&#9;&#9;Japanese Chess (on a 9x9 board, with piece drops) <BR>
capablanca&#9;Capablanca Chess (10x8 board, with Archbishop and Chancellor pieces)<BR>
gothic&#9;&#9;similar, with a better initial position<BR>
caparandom&#9;An FRC-like version of Capablanca Chess (10x8 board) <BR>
janus&#9;&#9;A game with two Archbishops (10x8 board)<BR>
shatranj&#9;Ancient Arabic Chess, with Elephants and General replacing B and Q.<BR>
courier&#9;Medieval intermedite between shatranj and modern Chess (on 12x8 board) <BR>
falcon&#9;&#9;A patented Chess variant with two Falcon pieces (10x8) board <BR>
berolina&#9;Pawns capture straight ahead, and move diagonal (legality testing off!)<BR>
cylinder&#9;Pieces wrap around the board, as if it were a cylinder (legality testing off!) <BR>
fairy&#9;&#9;A variant in which all pieces known to WinBoard can participate<BR>
knightmate&#9;King moves a Knight, and vice versa</P>
<P>In the shuffle variants, WinBoard does now shuffle the pieces, although you can still do it by hand using Edit Position. </FONT><FONT SIZE=2>Some variants are supported only in ICS mode, including bughouse, and kriegspiel.</FONT><FONT SIZE=2 COLOR="#008000"> </FONT><FONT SIZE=2>The winning/drawing conditions in crazyhouse (offboard interposition on mate), losers, suicide, giveaway, atomic, shatranj and 3check are not fully understood. In crazyhouse,</FONT><FONT SIZE=2 COLOR="#008000"> WinBoard now does keep track of offboard pieces.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /boardHeight <I>height</P>
</B></I><P>Allows you to set a non-standard number of board ranks in any variant. If the height is given as ‘-1’, the default height for the variant is used.</P>
<B><SUP><P>K#</SUP> /boardWidth <I>width</P>
</B></I><P>Allows you to set a non-standard number of board files in any variant. If the width is given as ‘-1’, the default width for the variant is used. Width a non-standard width, the initial position will always be an empty board, as the usual opening array will not fit.</P>
<B><SUP><P>K#</SUP> /holdingsSize <I>size</P>
</B></I><P>Allows you to set a non-standard size for the holdings in any variant. If the size is given as ‘-1’, the default holdings size for the variant is used. The first <I>size</I> piece types will go into the holdings on capture, and you will be able to drop them on the board in stead of making a normal move. If <I>size</I> equals 0, there will be no holdings.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /defaultFrcPosition <I>number</P>
</B></I><P>Specifies the number of the opening position in shuffle games like FRC. A value of ‘-1’ means the position is randomly generated by WinBoard.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /pieceToSquareTable <I>characterstring</P>
</B></I><P>The characters that are used to represent the piece types WinBoard knows in FEN diagrams and SAN moves. The string argument has to have an even length (or it will be ignored), as white and black pieces have to be given separately (in that order). The last letter for each color will be the King. The letters before that will be PNBRQ and then a whole host of fairy pieces in an order that has not fully crystallized yet (currently FEACWMOHIJGDVSLU, F=Ferz, Elephant, A=Archbishop, C=Chancellor, W=Wazir, M=Commoner, O=Cannon, H=Nightrider). You should list at least all pieces that occur in the variant you are playing. If you have less than 44 characters in the string, the pieces not mentioned will get assigned a period, and you will not be able to distinguish them in FENs. You can also explicitly assign pieces a period, in which case they will not be counted in deciding which captured pieces can go into the holdings.</P>
</FONT><FONT SIZE=2 COLOR="#008000"><P>A tilde as a piece name does mean this piece is used to represent a promoted Pawn in Crazyhouse-like games, i.e. on capture it turns back onto a Pawn. A + similarly indicate the piece is a Shogi-style promoted piece, that should revert to its non-promoted version on capture (rather than to a Pawn).</P>
<P>Note that promoted pieces are represented by pieces 11 further in the list.</P>
<P>You should not have to use this option often: each variant has its own default setting for the piece representation in FEN, which should be sufficient in normal use.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /rsh </B>or<B> <SUP>K#</SUP> /remoteShell <I>shellname</P>
</B></I><P>Name of the command used to run programs remotely. If this option is not given, WinBoard<I> </I>uses its own built-in implementation of the Unix <I>rcmd</I> protocol (the protocol used by <I>rsh</I>).</P>
<B><SUP><P>K#</SUP> /ruser </B>or<B> <SUP>K#</SUP> /remoteUser <I>username</P>
</B></I><P>User name on the remote system when running programs with the remoteShell. The default is your local user name.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>K#</SUP> /userName <I>username</P>
</B></I><P>Name under which the Human player will be listed in the PGN file. (Default is the login name on your local computer.)</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2 COLOR="#ff0000"><P>K#</SUP> /delayBeforeQuit <I>number</P>
</I><SUP><P>K#</SUP> /delayAfterQuit <I>number</P>
</B></I><P>These options specify how long WinBoard has to wait before sending a termination signal to rogue engine processes, that do not want to react to the ‘quit’ command. The second one determines the pause after killing the engine, to make sure it dies.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> /ini </B>or<B> <SUP>K#</SUP> /settingsFile <I>filename<BR>
</I><SUP>K#</SUP>@ <I>file-name</P>
</B></I><P>See <U>Settings</U>Settings.</P>
<B><P>&nbsp;</P>
<SUP><P>KK$#+</SUP> INITIALIZATION FILES</P>
<SUP><P>K</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><SUP><FONT FACE="Arial" SIZE=2>#</SUP> Settings</P>
</B></FONT><FONT SIZE=2><P>When WinBoard starts up, it reads option settings from a file named <I>WinBoard.ini </I>in its installation directory (the directory containing WinBoard.exe). Options in this file have the same format as <U>command line options</U>Options, except that they do not all have to be on a single line. You can put a comment in a settings file by preceding it with a semicolon (</FONT><FONT FACE="Courier New" SIZE=2>;</FONT><FONT SIZE=2>).</P>
<P>The WinBoard.ini file is read before the command line is processed, so any options you give on the command line override options in the file.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>If WinBoard encounters a /<U>settingsFile</U>settingsFile <I>filename </I>or <U>@</U>atsign<I>filename </I>option while reading settings (whether from the command line or a file), it reads more settings from the given file before reading the next option.</P>
<P>The <U>Save Settings Now</U>SaveSettings menu command writes the current values of most options to a file. In addition, settings are saved automatically when WinBoard exits if <U>Save Settings on Exit</U>SaveSettingsOnExit is checked. The settings are written to the last file named in a /settingsFile command, if any; otherwise to WinBoard.ini<I>.</I> The @ option does not affect which file settings are saved to.</P>
<P>Warning: Because Save Settings overwrites the last settings file (usually WinBoard.ini) and only saves a subset of WinBoard's options, you should not add settings of more options to such a file with a text editor. If you do this, your additional options will be lost on the next Save Settings. You can change the values of existing settings freely, using Notepad or any plain text editor. Be careful not to do this while WinBoard is running, however, unless you know that Save Settings on Exit is off. Otherwise all your changes will be overwritten and lost when WinBoard exits.</P>
</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>Notice that tournament managers, like PSWBTM, usually call WinBoard with the option not to save settings on exit, so that the entire tournament uses the same settings. So it does make sense to edit ‘volatile’ options, such as /variant, into the settings file.</P>
</FONT><B><SUP><FONT FACE="Arial" SIZE=2><P>K#</SUP> ICS Logon</P>
</B><P>Whenever WinBoard connects to the Internet Chess Server, if it finds a file called <I>ICS.ini </I>in its installation directory<I>,</I> it feeds the file's contents to the ICS as commands. Usually the first two lines of the file should be your ICS user name and password. You can specify a different name instead of <I>ICS.ini</I> by using the <U>icslogon</U>icslogon command line option.</P>
<B><P>&nbsp;</P>
<SUP><P>K$#+</SUP> INSTALLING CHESS ENGINES</P>
<P>Introduction</P>
</B><P>WinBoard is capable of operating with many different chess engines. You can play chess against a compatible engine, set up matches between two engines, or (advanced users only) run an automated computer player on an ICS.</P>
<P>Typically, the main difficulty in installing a new chess engine for use by WinBoard comes in getting the engine itself running and setting its options appropriately. The connection to WinBoard is relatively straightforward.</P>
<P>WinBoard-compatible chess engines are Win32 command line programs that you can run by hand in an MS-DOS Prompt box and type human-readable commands to. WinBoard connects to an engine simply by starting the engine up in the background and communicating with it through a pair of pipes. Therefore the basic procedure for installing an engine is:</P>
<P>1. Get a copy of the engine and any supporting files it needs.</P>
<P>2. Install and configure the engine as a command-line program by following the instructions that come with it. Try it out by running it from the command line in an MS-DOS Prompt box and make sure it works.</P>
<P>3. Optional, but recommended: Try out the WinBoard plus engine combination by running WinBoard with the proper command line arguments in an MS-DOS Prompt box.</P>
<P>4. Create a shortcut on your desktop or Start menu to run the engine with WinBoard.</P>
<P>5. Optionally edit your WinBoard.ini file to add the engine to the drop-down lists on WinBoard's startup dialog.</P>
<P>This document cannot explain steps 1 and 2 in detail for all engines, but we will take you through all five steps in outline, using Crafty as an example.</P>
<B><P>Example: Crafty</P>
</B><P>1. Choose a directory to put Crafty in. We'll use </FONT><FONT FACE="Courier New" SIZE=2>C:\Program Files\Crafty</FONT><FONT FACE="Arial" SIZE=2> in this example. Download your copy of Crafty into this directory from its author's FTP site, </FONT><FONT FACE="Courier New" SIZE=2>ftp://ftp.cis.uab.edu/pub/hyatt</FONT><FONT FACE="Arial" SIZE=2>. At this writing, you will need at least the following files:</P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>read.me<BR>
v15/crafty.doc<BR>
v15/crafty.faq<BR>
v15/wcrafty-15.*.exe</FONT><FONT FACE="Arial" SIZE=2> (where * is replaced by the largest number there)<BR>
</FONT><FONT FACE="Courier New" SIZE=2>common/start.zip</FONT><FONT FACE="Courier" SIZE=2><BR>
</FONT><FONT FACE="Courier New" SIZE=2>common/medium.zip</FONT><FONT FACE="Courier" SIZE=2> </FONT><FONT FACE="Arial" SIZE=2>(or another book).</P></DIR>

<P>2. The first three files are documentation that you can read with a text editor. Read the read.me file first and follow the instructions carefully. This will take some time. Do not write to the author of WinBoard if you have trouble with the instructions in the Crafty read.me. Try running Crafty from an MS-DOS Prompt box and make sure it works before you go on.</P>
<P>3. Optional, but recommended: In an MS-DOS Prompt box,</FONT><FONT SIZE=2> </FONT><FONT FACE="Courier New" SIZE=2>cd </FONT><FONT FACE="Arial" SIZE=2>to the directory where WinBoard is installed, typically </FONT><FONT FACE="Courier New" SIZE=2>"C:\Program Files\WinBoard"</FONT><FONT FACE="Arial" SIZE=2>. Then type the following command line. Use the actual name of the wcrafty file you downloaded, not an </FONT><FONT FACE="Courier New" SIZE=2>*</FONT><FONT FACE="Arial" SIZE=2>, and if your browser changed the first period to an underscore when you downloaded the file, make that change in the command line too.</P><DIR>
<DIR>
<DIR>
<DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>WinBoard /cp /fcp=WCrafty-15.* /fd="C:\Program Files\Crafty" /scp=WCrafty-15.* /sd="C:\Program Files\Crafty"</P></DIR>
</DIR>
</DIR>
</DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>WinBoard should start up, with Crafty running as its chess engine. Check that you can play chess against Crafty.</P>
<P>4. To make a shortcut or Start menu entry for Crafty: Right-click on the desktop and select New/Shortcut. Use the Browse button to find your winboard.exe file and get its name into the Command Line box. (It usually will be "C:\Program Files\WinBoard\winboard.exe".) Click in the Command Line box and hit the End key to go to the end. Add the following to the end of the command line, <I>after</I> the closing quotation mark. Use the actual name of the wcrafty file you downloaded, not an </FONT><FONT FACE="Courier New" SIZE=2>*</FONT><FONT FACE="Arial" SIZE=2>, and if your browser changed the first period to an underscore when you downloaded the file, make that change in the command line too.</P><DIR>
<DIR>
<DIR>
<DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>/cp /fcp=WCrafty-15.* /fd="C:\Program Files\Crafty" <BR>
/scp=WCrafty-15.* /sd="C:\Program Files\Crafty"</P></DIR>
</DIR>
</DIR>
</DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>Press Next, choose a name for the shortcut, and press Finish. You can now use this shortcut to run WinBoard with Crafty. Double-click it to check that it works. You can drag or copy the shortcut into your Start menu if you like.</P>
<P>5. To add Crafty as an option in the WinBoard Startup dialog, edit your <U>WinBoard.ini file</U>Settings with Notepad or another plain text editor, carefully following the example shown under <U>/firstChessProgramNames</U>firstChessProgramNames above.</P>
<B><P>For more information</P>
</B><P>If you would like to run an automated computer player on the ICS, see the separate file </FONT><FONT FACE="Courier New" SIZE=2>zippy.README</FONT><FONT FACE="Arial" SIZE=2>. If you would like to write your own engine to interface to WinBoard, see the separate file </FONT><FONT FACE="Courier New" SIZE=2>engine-intf.html</FONT><FONT FACE="Arial" SIZE=2>, and join the mailing list mentioned there. Both files are included in the WinBoard distribution. You might also want to get the source code for WinBoard. It is available from the author's Web page, http://www.tim-mann.org/chess.html</FONT><FONT FACE="Courier New" SIZE=2>.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>&nbsp;</P>
<SUP><P>K#$+</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><FONT FACE="Arial" SIZE=2>FIREWALLS</P>
</B><P>By default, "WinBoard /ics"<I> </I>communicates with an Internet Chess Server by opening a TCP socket directly from the machine it is running on to the ICS. If there is a firewall between your machine and the ICS, this won't work. Here are some recipes for getting around common kinds of firewalls using special options to WinBoard<I>.</I> Important: See the paragraph in the <U>LIMITATIONS</U>LIMITATIONS section below about extra echoes.</P>
<P>Suppose that you can't telnet directly to ICS, but you can telnet to a firewall host, log in, and then telnet from there to ICS. Let's say the firewall is called fire.wall.com. Set command-line options as follows: </P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>WinBoard -ics -icshost fire.wall.com -icsport 23</P></DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>Then when you run WinBoard<I> </I>in ICS mode, you will be prompted to log in to the firewall host. (This works because port 23 is the standard telnet login service.) Do so, then telnet to ICS, using a command like "telnet chessclub.com 5000", or whatever command the firewall provides for telnetting to port 5000.</P>
<P>If your firewall lets you telnet (or rlogin) to remote hosts, but doesn't let you telnet to port 5000, you will have to find some other host outside the firewall that does let you do this, and hop through it. For instance, suppose you have an account at foo.edu. Follow the recipe above, but instead of typing "telnet chessclub.com 5000" to the firewall, type "telnet foo.edu" (or "rlogin foo.edu"), log in there, and then type "telnet chessclub.com 5000".</P>
<P>Exception: chessclub.com itself lets you connect to the chess server on the default telnet port (23), which is what you get if you don’t specify a port to the telnet program. But the other chess servers don’t allow this.</P>
<P>Suppose that you can't telnet directly to ICS, but you can use rsh to run programs on a firewall host, and that host can telnet to ICS. Let's say the firewall is called rsh.wall.com. Set command-line options as follows: </P><DIR>

</FONT><FONT FACE="Courier New" SIZE=2><P>WinBoard -ics -gateway rsh.wall.com -icshost chessclub.com</P></DIR>

</FONT><FONT FACE="Arial" SIZE=2><P>Then when you run WinBoard<I> </I>in ICS mode, it will connect to the ICS by using rsh to run the command "telnet chessclub.com 5000" on host rsh.wall.com.</P>
<P>ICC timestamp and FICS timeseal do not work through many<B> </B>firewalls. You can use them only if your firewall gives a clean TCP connection with a full 8-bit wide path. If your firewall allows you to get out only by running a special telnet program, you can't use timestamp or timeseal across it. But if you have access to a computer just outside your firewall, and you have much lower netlag when talking to that computer than to the ICS, it might be worthwhile running timestamp there. Follow the instructions above for hopping through a host outside the firewall (foo.edu in the example), but run timestamp or timeseal on that host instead of telnet.</P>
<P>Suppose that you have a SOCKS firewall that requires you to go through some extra level of authentication, but after that will give you a clean 8-bit wide TCP connection to the chess server. In that case, if you are using timestamp or timeseal, you need to somehow socksify it; if not, you need to socksify WinBoard itself. Socksification is beyond the scope of this document, but see the SOCKS Web site at http://www.socks.nec.com/how2socksify.html.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><FONT FACE="Arial" SIZE=2>LIMITATIONS </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">AND NON-LIMITATIONS</P>
</B></FONT><FONT FACE="Arial" SIZE=2><P>WinBoard<I> </I>is a Win32 application. It runs only on Windows NT and Windows 95. It does not work on Windows 3.11 or earlier, even with the Win32s compatibility package.</P>
<I><P>CMail, </I>the companion program to xboard for playing electronic mail correspondence chess, has not been ported to Win32.</P>
<P>There is no way for two people running copies of WinBoard<I> </I>to play each other without going through the Internet Chess Server.</P>
<P>Under some circumstances, your ICS password may be echoed when you log on.</P>
<P>If you are connecting to the ICS by running telnet, timestamp, or timeseal on an Internet provider host, you may find that each line you type is echoed back an extra time after you hit Enter. You can probably turn this echo off. If your Internet provider is a Unix system, type "</FONT><FONT FACE="Courier New" SIZE=2>stty -echo</FONT><FONT FACE="Arial" SIZE=2>" after you log in to the provider but before you run telnet, timestamp, or timeseal. In addition, you may need to type the sequence &quot;</FONT><FONT FACE="Courier New" SIZE=2>Ctrl+Q Ctrl+E Enter</FONT><FONT FACE="Arial" SIZE=2>&quot; after you have finished logging in to ICS. On VMS, type &quot;</FONT><FONT FACE="Courier New" SIZE=2>set terminal /noecho /nowrap</FONT><FONT FACE="Arial" SIZE=2>&quot;, and after you telnet to the ICS, type &quot;</FONT><FONT FACE="Courier New" SIZE=2>Ctrl+Q Ctrl+] Enter set mode char Enter Enter</FONT><FONT FACE="Arial" SIZE=2>&quot;. It is a good idea to turn off the extra remote echo if you can, because otherwise it can get interleaved with output from the ICS and confuse WinBoard's parsing routines. Don’t just turn off <U>Local Line Editing</U>localLineEditing so that you see only the remote echo and not the local one; that will make the interleaving problem worse.</P>
<P>The game parser recognizes only algebraic notation (SAN).</P>
<P>The <U>ICS logon</U>ICSLogon file does not work properly when you connect to ICS through a Unix gateway host by setting <U>icsPort</U>icsPort to 23. The Unix login process apparently discards type-ahead.</P>
<P>Some WinBoard functions may not work with versions of GNU Chess earlier than 4.0, patchlevel 77. The current version of WinBoard<I> </I>works best with Crafty version 15.11 or later.</P>
</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>Many of the following points used to be limitations in WinBoard 4.2.7 and earlier, but are now fixed:</P>
<P>The internal move legality tester in WinBoard 4.3.xx does look at the game history, and is fully aware of castling or en passant-capture rights. </FONT><FONT FACE="Arial" SIZE=2>It permits castling with the king on the <B>d</B> file because this is possible in some "wild 1" games on ICS. The piece-drop menu does not check piece drops in bughouse to see if you actually hold the piece you are trying to drop.</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"> But this way of dropping pieces should be considered an obsolete feature, now that pieces can be dropped by dragging them from the holdings to the board. </FONT><FONT FACE="Arial" SIZE=2>Anyway, if you would attempt an illegal move when using a chess engine or the ICS,</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"> </FONT><FONT FACE="Arial" SIZE=2>WinBoard will accept the error message that comes back, undo the move, and let you try another.</P>
</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>FEN positions saved by WinBoard<I> </I>do include correct information about whether castling or en passant are legal, and also handle the 50-move counter.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>The mate detector does not understand that non-contact mate is not really mate in bughouse.</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"> </FONT><FONT FACE="Arial" SIZE=2>The only problem this causes while playing is minor: a "#" (mate indicator) character will show up after a non-contact mating move in the move list. WinBoard will not assume the game is over at that point,</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"> not even when the option Detect Mates is on.</P>
<P>Edit Game mode always uses the rules of the selected variant, which can be a variant that uses piece drops.  You can load and edit games that contain piece drops. The (obsolete) piece menus are not active, but you can perform piece drops by dragging pieces from the holdings.</P>
<P>Edit Position mode does not allow you to edit the Crazyhouse holdings properly. You cannot drag pieces to the holding, and using the popup menu to put pieces there does not adapt the holding counts and leads to an inconsistent state. Set up Crazyhouse positions by loading / pasting a bFEN, from there you can set the holdings.</P>
<P>Fischer Random castling is fully understood. You can enter castlings by dragging the King on top of your Rook. You can probably also play Fischer Random successfully on ICS by typing castling moves into the ICS Interaction window.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>Also see the ToDo file included with the distribution for many other possible bugs, limitations, and ideas for improvement that have been suggested.</P>
<B><P>&nbsp;</P>
<SUP><P>K#$+</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><FONT FACE="Arial" SIZE=2>AUTHORS AND CONTRIBUTORS</P>
</B><P>WinBoard is partly based on <I>xboard</I>, a chessboard program for Unix and the X Window System. Tim Mann has been responsible for all versions of WinBoard,<I> </I>and for xboard versions 1.3 and beyond. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">H.G.Muller is responsible for version 4.3.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>Mark Williams added many features to WinBoard 4.1.0, including copy/paste, premove, icsAlarm, autoFlipView, training mode, auto raise, and blindfold. Hugh Fischer added piece animation to xboard, and Henrik Gram added it to WinBoard. Frank McIngvale contributed many xboard<I> </I>user interface improvements and improved Crafty support. Jochen Wiedmann ported xboard<I> </I>to the Amiga, creating <I>AmyBoard</I>, and converted the documentation to texinfo. Elmar Bartel contributed the new piece bitmaps for version 3.2. Evan Welsh wrote <I>CMail. </I>John Chanak contributed the initial implementation of ICS mode. The default color scheme was adapted from Wayne Christopher's <I>XChess </I>program. Chris Sears and Dan Sears wrote the original xboard<I>. </I>They were responsible for xboard<I> </I>versions 1.0 through 1.2. </FONT><FONT FACE="Arial" SIZE=2 COLOR="#ff0000">Allessandro Scotti added many elements to the user interface, including the board textures and font-based rendering, the evaluation-graph, move-history and engine-output window. He was also responsible for adding the UCI support.</FONT><FONT FACE="Arial" SIZE=2> </FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000">H.G. Muller made WinBoard castling- and e.p.-aware, added variant support with adjustable board sizes, the Crazyhouse holdings, and the fairy pieces. In addition he added most of the adjudication options, made WinBoard ore robust in dealing with buggy and crashing engines, and extended time control with a time-odds and node-count-based modes.</P>
</FONT><FONT FACE="Arial" SIZE=2><P>Send bug reports to &lt;bug-xboard@gnu.org&gt;. Please run WinBoard with the /debug option and include the output from the resulting WinBoard.debug file in your message.</P>
</FONT><FONT FACE="Arial" SIZE=2 COLOR="#008000"><P>The WinBoard 4.3.xx line is being developed by H.G. Muller independently of the GNU Savannah xboard project. Bug reports on this version, and suggestions for improvements and additions, are best posted in the WinBoard forum, development section (http://www.open-aurec.com/wbforum).</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>&nbsp;</P>
<SUP><P>K#$+</SUP></FONT><FONT FACE="Arial" SIZE=1> </FONT><FONT FACE="Arial" SIZE=2>COPYRIGHT</P>
</B><P>Copyright 1991 by Digital Equipment Corporation, Maynard, Massachusetts. <BR>
Enhancements Copyright 1992-2003 Free Software Foundation, Inc.</P>
<P>The following terms apply to Digital Equipment Corporation's copyright interest in WinBoard:</P>
<P>All Rights Reserved</P>
<P>Permission to use, copy, modify, and distribute this software and its documentation for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation, and that the name of Digital not be used in advertising or publicity pertaining to distribution of the software without specific, written prior permission.</P>
<P>DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</P>
<P>The following terms apply to the enhanced version of WinBoard distributed by the Free Software Foundation:</P>
<P>This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</P>
<P>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.</P>
<P>You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</P></FONT></BODY>
</HTML>
